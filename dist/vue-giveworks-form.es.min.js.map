{"version":3,"file":"vue-giveworks-form.es.min.js","sources":["../node_modules/vue-interface/src/Helpers/Functions/chunk.js","../node_modules/vue-interface/src/Helpers/Functions/extend.js","../node_modules/vue-interface/src/Helpers/Functions/isNull.js","../node_modules/vue-interface/src/Helpers/Functions/isArray.js","../node_modules/vue-interface/src/Helpers/Functions/isObject.js","../node_modules/vue-interface/src/Helpers/Functions/isNumber.js","../node_modules/vue-interface/src/Helpers/Functions/isNumeric.js","../node_modules/vue-interface/src/Helpers/Functions/key.js","../node_modules/vue-interface/src/Helpers/Functions/each.js","../node_modules/vue-interface/src/Helpers/Functions/isFunction.js","../node_modules/vue-interface/src/Helpers/Functions/isBoolean.js","../node_modules/vue-interface/src/Helpers/Functions/kebabCase.js","../node_modules/vue-interface/src/Helpers/Functions/mapKeys.js","../node_modules/vue-interface/src/Helpers/Prefix/Prefix.js","../node_modules/vue-runtime-helpers/normalize-component.js","../node_modules/vue-interface/src/Helpers/Unit/Unit.js","../node_modules/vue-place-autocomplete/dist/vue-place-autocomplete.es.js","../node_modules/vue-interface/src/Directives/Autogrow/Autogrow.js","../node_modules/vue-interface/src/Mixins/Colorable/Colorable.js","../node_modules/vue-interface/src/Mixins/MergeClasses/MergeClasses.js","../node_modules/vue-interface/src/Mixins/FormControl/FormControl.js","../src/Components/Fields/SurveyField.vue","../node_modules/vue-interface/src/Mixins/Screenreaders/Screenreaders.js","../node_modules/vue-interface/src/Components/HelpText/HelpText.vue","../node_modules/vue-interface/src/Components/FormGroup/FormGroup.vue","../node_modules/vue-interface/src/Components/FormLabel/FormLabel.vue","../node_modules/vue-interface/src/Components/FormControl/FormControl.vue","../node_modules/vue-interface/src/Components/FormFeedback/FormFeedback.vue","../node_modules/vue-interface/src/Components/ActivityIndicator/Types/BaseType.vue","../node_modules/vue-interface/src/Components/ActivityIndicator/Types/Dots.vue","../node_modules/vue-interface/src/Components/ActivityIndicator/Types/Spinner.vue","../node_modules/vue-interface/src/Components/ActivityIndicator/ActivityIndicator.vue","../node_modules/vue-interface/src/Components/InputField/InputField.vue","../src/Components/Fields/AltEmailField.vue","../src/Components/Fields/AltPhoneField.vue","../node_modules/vue-interface/src/Components/RadioField/RadioField.vue","../node_modules/vue-interface/src/Components/CheckboxField/CheckboxField.vue","../src/Components/Fields/CheckboxField.vue","../src/Components/Fields/CityField.vue","../node_modules/vue-interface/src/Mixins/HasSlots/HasSlots.js","../node_modules/vue-interface/src/Mixins/Sizeable/Sizeable.js","../node_modules/vue-interface/src/Components/InputGroup/InputGroupText.vue","../node_modules/vue-interface/src/Components/InputGroup/InputGroupAppend.vue","../node_modules/vue-interface/src/Components/InputGroup/InputGroupPrepend.vue","../node_modules/vue-interface/src/Components/InputGroup/InputGroup.vue","../src/Components/Fields/DollarAmountField.vue","../src/Components/Fields/FirstField.vue","../src/Components/Fields/InputField.vue","../src/Components/Fields/LastField.vue","../src/Components/Fields/PrimaryEmailField.vue","../src/Components/Fields/PrimaryPhoneField.vue","../src/Components/Fields/RadioField.vue","../node_modules/vue-interface/src/Components/SelectField/SelectField.vue","../src/Components/Fields/SelectField.vue","../src/Components/Fields/StateField.vue","../src/Components/Fields/StreetField.vue","../node_modules/vue-interface/src/Components/TextareaField/TextareaField.vue","../src/Components/Fields/TextareaField.vue","../src/Components/Fields/ZipField.vue","../src/main.js"],"sourcesContent":["export default function chunk(arr, chunkSize, cache = []) {\n    const tmp = [...arr];\n    while(tmp.length) cache.push(tmp.splice(0, chunkSize));\n    return cache;\n}\n","export default function extend(...args) {\n    return Object.assign(...args);\n}\n","export default function isNull(value) {\n    return value === null;\n}\n","export default function isArray(value) {\n    return Array.isArray(value);\n}\n","import isNull from './isNull';\nimport isArray from './isArray';\n\nexport default function isObject(value) {\n    return (typeof value === 'object') && !isNull(value) && !isArray(value);\n}\n","export default function isNumber(value) {\n    return (typeof value === 'number') || (\n        value ? value.toString() === '[object Number]' : false\n    );\n}\n","import isArray from './isArray';\nimport isNumber from './isNumber';\n\nexport default function isNumeric(value) {\n    return isNumber(value) || (\n        !!value && !isArray(value) && !!value.toString().match(/^-?[\\d.,]+$/)\n    );\n}\n","import isNumeric from './isNumeric';\n\nexport default function key(value) {\n    return isNumeric(value) ? parseFloat(value) : value;\n}\n","import key from './key';\n\nexport default function each(subject, fn) {\n    for(const i in subject) {\n        fn(subject[i], key(i));\n    }\n}\n","export default function isFunction(value) {\n    return value instanceof Function;\n}\n","export default function isBoolean(value) {\n    return value === true || value === false;\n}\n","export default function kebabCase(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2')\n        .replace(/\\s+/g, '-')\n        .replace(/_/g, '-')\n        .toLowerCase();\n}\n","import each from './each';\n\nexport default function mapKeys(object, fn) {\n    const mapped = {};\n\n    each(object, (value, key) => {\n        mapped[fn(value, key)] = value;\n    });\n\n    return mapped;\n}\n","import {\n    mapKeys,\n    isObject,\n    isBoolean\n} from '../Functions';\n\nexport default function prefix(subject, prefix, delimeter = '-') {\n    const prefixer = (value, key) => {\n        const string = (key || value)\n            .replace(new RegExp(`^${prefix}${delimeter}?`), '');\n\n        return [prefix, string].filter(value => !!value).join(delimeter);\n    };\n\n    if(isBoolean(subject)) {\n        return subject;\n    }\n\n    if(isObject(subject)) {\n        return mapKeys(subject, prefixer);\n    }\n\n    return prefixer(subject);\n}\n","export default function normalizeComponent(compiledTemplate, injectStyle, defaultExport, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, isShadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n    if (typeof isShadowMode === 'function') {\n        createInjectorSSR = createInjector;\n        createInjector = isShadowMode;\n        isShadowMode = false;\n    }\n    // Vue.extend constructor export interop\n    const options = typeof defaultExport === 'function' ? defaultExport.options : defaultExport;\n    // render functions\n    if (compiledTemplate && compiledTemplate.render) {\n        options.render = compiledTemplate.render;\n        options.staticRenderFns = compiledTemplate.staticRenderFns;\n        options._compiled = true;\n        // functional template\n        if (isFunctionalTemplate) {\n            options.functional = true;\n        }\n    }\n    // scopedId\n    if (scopeId) {\n        options._scopeId = scopeId;\n    }\n    let hook;\n    if (moduleIdentifier) {\n        // server build\n        hook = function (context) {\n            // 2.3 injection\n            context =\n                context || // cached call\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\n            // 2.2 with runInNewContext: true\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n                context = __VUE_SSR_CONTEXT__;\n            }\n            // inject component styles\n            if (injectStyle) {\n                injectStyle.call(this, createInjectorSSR(context));\n            }\n            // register component module identifier for async chunk inference\n            if (context && context._registeredComponents) {\n                context._registeredComponents.add(moduleIdentifier);\n            }\n        };\n        // used by ssr in case component is cached and beforeCreate\n        // never gets called\n        options._ssrRegister = hook;\n    }\n    else if (injectStyle) {\n        hook = isShadowMode\n            ? function () {\n                injectStyle.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n            }\n            : function (context) {\n                injectStyle.call(this, createInjector(context));\n            };\n    }\n    if (hook) {\n        if (options.functional) {\n            // register for functional component in vue file\n            const originalRender = options.render;\n            options.render = function renderWithStyleInjection(h, context) {\n                hook.call(context);\n                return originalRender(h, context);\n            };\n        }\n        else {\n            // inject component registration as beforeCreate hook\n            const existing = options.beforeCreate;\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n        }\n    }\n    return defaultExport;\n}\n","export default function(height) {\n    return isFinite(height) ? height + 'px' : height;\n}\n","function camelCase(string) {\n    string = string.toLowerCase().replace(/(?:(^.)|([-_\\s]+.))/g, function(match) {\n        return match.charAt(match.length - 1).toUpperCase();\n    });\n\n    return string.charAt(0).toLowerCase() + string.substring(1);\n}\n\nfunction extend(...args) {\n    return Object.assign(...args);\n}\n\nfunction isNull(value) {\n    return value === null;\n}\n\nfunction isArray(value) {\n    return Array.isArray(value);\n}\n\nfunction isObject(value) {\n    return (typeof value === 'object') && !isNull(value) && !isArray(value);\n}\n\nfunction isNumber(value) {\n    return (typeof value === 'number') || (\n        value ? value.toString() === '[object Number]' : false\n    );\n}\n\nfunction isNumeric(value) {\n    return isNumber(value) || (!!value && !!value.toString().match(/^-?[\\d.,]+$/));\n}\n\nfunction key(value) {\n    return isNumeric(value) ? parseFloat(value) : value;\n}\n\nfunction each(subject, fn) {\n    for (const i in subject) {\n        fn(subject[i], key(i));\n    }\n}\n\nfunction matches(properties) {\n    return subject => {\n        for (const i in properties) {\n            if (isObject(properties[i])) {\n                return subject[i] ? matches(properties[i])(subject[i]) : false;\n            }\n            else if (!subject || subject[i] !== properties[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\nfunction get(object, path) {\n    return (isString(path) ? path.split('.') : (!isArray(path) ? [path] : path)).reduce((a, b) => a[b], object);\n}\n\nfunction property(path) {\n    return object => {\n        return get(object, path);\n    };\n}\n\nfunction isFunction(value) {\n    return value instanceof Function;\n}\n\nfunction matchesProperty(path, value) {\n    return subject => {\n        return get(subject, path) === value;\n    };\n}\n\nfunction predicate(value) {\n    if (isObject(value)) {\n        value = matches(value);\n    }\n    else if (isArray(value)) {\n        value = matchesProperty(value[0], value[1]);\n    }\n    else if (!isFunction(value)) {\n        value = property(value);\n    }\n\n    return value;\n}\n\nfunction isBoolean(value) {\n    return value === true || value === false;\n}\n\nfunction isUndefined(value) {\n    return typeof value === 'undefined';\n}\n\nfunction kebabCase(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2')\n        .replace(/\\s+/g, '-')\n        .replace(/_/g, '-')\n        .toLowerCase();\n}\n\nfunction mapKeys(object, fn) {\n    const mapped = {};\n\n    each(object, (value, key) => {\n        mapped[fn(value, key)] = value;\n    });\n\n    return mapped;\n}\n\nfunction negate(fn) {\n    return (...args) => isFunction(fn) ? !fn(...args) : !fn;\n}\n\nfunction pickBy(object, match) {\n    const subject = {};\n\n    each(object, (value, key) => {\n        if (predicate(match)(value)) {\n            subject[key] = value;\n        }\n    });\n\n    return subject;\n}\n\nfunction omitBy(object, fn) {\n    return pickBy(object, negate(fn));\n}\n\nvar ALIASES = {\n  'street': ['street_number', 'route', 'intersection'],\n  'city': ['locality'],\n  'state': ['administrative_area_level_1'],\n  'zip': ['postal_code'],\n  'zipcode': ['postal_code'],\n  'county': ['administrative_area_level_2']\n};\n\nfunction intersection(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  }).filter(function (e, i, c) {\n    return c.indexOf(e) === i;\n  });\n}\n\nfunction extract(type, modifiers, geocoder) {\n  if (geocoder[type]) {\n    return geocoder[type];\n  } else if (type === 'latitude') {\n    return geocoder.geometry.location.lat();\n  } else if (type === 'longitude') {\n    return geocoder.geometry.location.lng();\n  }\n\n  var aliases = ALIASES[type] || (isArray(type) ? type : [type]);\n  var values = geocoder.address_components.map(function (component) {\n    if (intersection(component.types, aliases).length) {\n      return component[modifiers.short ? 'short_name' : 'long_name'];\n    }\n  }).filter(function (value) {\n    return !!value;\n  });\n  return values.length ? values.join(' ') : null;\n}\n\nfunction update(binding, vnode, value) {\n  var props = binding.expression.split('.');\n  var prop = props.pop();\n  var model = props.reduce(function (carry, i) {\n    return carry[i];\n  }, vnode.context);\n  value = isArray(value) ? value.join(' ') : value;\n\n  if (binding.modifiers.query) {\n    vnode.componentInstance.query = value;\n  }\n\n  model[prop] = value;\n  return value;\n}\n\nvar PlaceAutofill = {\n  bind: function bind(el, binding, vnode) {\n    vnode.componentInstance.$on('select', function (place, geocoder) {\n      vnode.context.$nextTick(function () {\n        update(binding, vnode, extract(binding.arg, binding.modifiers, geocoder));\n      });\n    });\n  }\n};\n\nfunction geocode(options) {\n  var geocoder = new window.google.maps.Geocoder();\n  return new Promise(function (resolve, reject) {\n    if (!options.geometry) {\n      geocoder.geocode(options, function (results, status) {\n        if (status === window.google.maps.GeocoderStatus.OK) {\n          resolve(results);\n        } else {\n          reject(status);\n        }\n      });\n    } else {\n      resolve([options]);\n    }\n  });\n}\n\nconst LOADED_SCRIPTS = {};\n\nfunction element(url) {\n    const script = document.createElement('script');\n    script.setAttribute('src', url);\n    script.setAttribute('type', 'text/javascript');\n    script.setAttribute('charset', 'utf-8');\n    return script;\n}\n\nfunction append(script) {\n    if (document.querySelector('head')) {\n        document.querySelector('head').appendChild(script);\n    }\n    else {\n        document.querySelector('body').appendChild(script);\n    }\n\n    return script;\n}\n\nfunction script(url) {\n    if (LOADED_SCRIPTS[url] instanceof Promise) {\n        return LOADED_SCRIPTS[url];\n    }\n    else if (LOADED_SCRIPTS[url] || document.querySelector(`script[src=\"${url}\"]`)) {\n        return new Promise((resolve, reject) => {\n            resolve(LOADED_SCRIPTS[url]);\n        });\n    }\n\n    LOADED_SCRIPTS[url] = new Promise((resolve, reject) => {\n        try {\n            append(element(url)).addEventListener('load', event => {\n                resolve(LOADED_SCRIPTS[url] = event);\n            });\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n\n    return LOADED_SCRIPTS[url];\n}\n\nvar PlaceAutocompleteListItem = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',{staticClass:\"autocomplete-list-item\",on:{\"focus\":_vm.onFocus,\"onBlur\":_vm.onBlur}},[_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.onClick($event)},\"focus\":_vm.onFocus,\"blur\":_vm.onBlur}},[_c('span',{staticClass:\"autocomplete-list-item-icon\"}),_vm._v(\" \"),_c('span',{staticClass:\"autocomplete-list-item-label\"},[_vm._t(\"default\")],2)])])},staticRenderFns: [],\n\n    name: 'place-autocomplete-list-item',\n\n    props: {\n\n        item: Object\n\n    },\n\n    methods: {\n\n        onBlur(event) {\n            this.$emit('blur', event, this);\n        },\n\n        onClick(event) {\n            this.$emit('click', event, this);\n        },\n\n        onFocus(event) {\n            this.$emit('focus', event, this);\n        }\n\n    }\n\n};\n\nvar PlaceAutocompleteList = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"autocomplete-list-wrapper\"},[_c('ul',{staticClass:\"autocomplete-list\"},_vm._l((_vm.items),function(item,i){return _c('place-autocomplete-list-item',{key:item.id,attrs:{\"item\":item},on:{\"click\":_vm.onClick,\"focus\":_vm.onFocus,\"blur\":_vm.onBlur}},[_vm._v(\" \"+_vm._s(item[_vm.display])+\" \")])}))])},staticRenderFns: [],\n\n    name: 'place-autocomplete-list',\n\n    components: {\n        PlaceAutocompleteListItem\n    },\n\n    props: {\n\n        'items': {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        'display': {\n            type: String,\n            default: 'description'\n        }\n\n    },\n\n    methods: {\n\n        onBlur(event, item) {\n            this.$emit('item:blur', event, item);\n        },\n\n        onFocus(event, item) {\n            this.$emit('item:focus', event, item);\n        },\n\n        onClick(event, item) {\n            this.$emit('item:click', event, item);\n        }\n\n    }\n\n};\n\nfunction prefix(subject, prefix, delimeter = '-') {\n    const prefixer = (value, key$$1) => {\n        const string = (key$$1 || value)\n            .replace(new RegExp(`^${prefix}${delimeter}?`), '');\n\n        return [prefix, string].filter(value => !!value).join(delimeter);\n    };\n\n    if (isBoolean(subject)) {\n        return subject;\n    }\n\n    if (isObject(subject)) {\n        return mapKeys(subject, prefixer);\n    }\n\n    return prefixer(subject);\n}\n\nvar FormControl = {\n\n    props: {\n\n        /**\n         * The autocomplete attribute value.\n         *\n         * @property String\n         */\n        autocomplete: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        id: [Number, String],\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The field name attribute value.\n         *\n         * @property String\n         */\n        name: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        value: {\n            default: null\n        },\n\n        /**\n         * The placeholder attribute value.\n         *\n         * @property String\n         */\n        placeholder: String,\n\n        /**\n         * Is the field required.\n         *\n         * @property String\n         */\n        required: Boolean,\n\n        /**\n         * Add form-group wrapper to input\n         *\n         * @property String\n         */\n        group: {\n            type: Boolean,\n            value: true\n        },\n\n        /**\n         * The regex pattern for validation.\n         *\n         * @property String\n         */\n        pattern: String,\n\n        /**\n         * An inline field validation error.\n         *\n         * @property String|Boolean\n         */\n        error: String,\n\n        /**\n         * An inline field validation errors passed as object with key/value\n         * pairs. If errors passed as an object, the form name will be used for\n         * the key.\n         *\n         * @property Object|Boolean\n         */\n        errors: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n\n        /**\n         * Some feedback to add to the field once the field is successfully\n         * valid.\n         *\n         * @property String\n         */\n        feedback: [String, Array],\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'change', 'click', 'keyup', 'keydown', 'progress', 'paste'];\n            }\n        },\n\n        /**\n         * The default class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control'\n        },\n\n        /**\n         * Hide the label for browsers, but leave it for screen readers.\n         *\n         * @property String\n         */\n        hideLabel: Boolean,\n\n        /**\n         * Additional margin/padding classes for fine control of spacing\n         *\n         * @property String\n         */\n        spacing: String,\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        },\n\n        /**\n         * Display the form field inline\n         *\n         * @property String\n         */\n        inline: Boolean,\n\n        /**\n         * If the form control is readonly, display only as text?\n         *\n         * @property String\n         */\n        plaintext: Boolean,\n\n        /**\n         * Is the form control readonly?\n         *\n         * @property String\n         */\n        readonly: Boolean,\n\n        /**\n         * Is the form control disabled?\n         *\n         * @property String\n         */\n        disabled: Boolean,\n\n        /**\n         * Some instructions to appear under the field label\n         *\n         * @property String\n         */\n        helpText: [Number, String],\n\n        /**\n         * The maxlength attribute\n         *\n         * @property String\n         */\n        maxlength: [Number, String]\n\n    },\n\n    directives: {\n        bindEvents: {\n            bind(el, binding, vnode) {\n                const events = binding.value || vnode.context.bindEvents;\n\n                each(events, name => {\n                    el.addEventListener(name, event => {\n                        vnode.context.$emit(name, event);\n                    });\n                });\n            }\n        }\n    },\n\n    methods: {\n\n        blur() {\n            if (this.getInputField()) {\n                this.getInputField().blur();\n            }\n        },\n\n        focus() {\n            if (this.getInputField()) {\n                this.getInputField().focus();\n            }\n        },\n\n        getInputField() {\n            return this.$el.querySelector('.form-control, input, select, textarea');\n        },\n\n        getFieldErrors() {\n            let errors = this.error || this.errors;\n\n            if (isObject(this.errors)) {\n                errors = this.errors[this.name || this.id];\n            }\n\n            return !errors || isArray(errors) || isObject(errors) ? errors : [errors];\n        }\n\n    },\n\n    computed: {\n\n        callbacks() {\n            return this.bindEvents.map(event => {\n                return {\n                    name: event,\n                    callback: this[camelCase(['on', event].join(' '))]\n                };\n            }).filter(event => !isUndefined(event.callback));\n        },\n\n        invalidFeedback() {\n            if (this.error) {\n                return this.error;\n            }\n\n            const errors = this.getFieldErrors();\n\n            return isArray(errors) ? errors.join('<br>') : errors;\n        },\n\n        validFeedback() {\n            return isArray(this.feedback) ? this.feedback.join('<br>') : this.feedback;\n        },\n\n        controlClass() {\n            return this.defaultControlClass + (this.plaintext ? '-plaintext' : '');\n        },\n\n        controlSizeClass() {\n            return prefix(this.size, this.controlClass);\n        },\n\n        controlClasses() {\n            return [\n                this.controlClass,\n                this.controlSizeClass,\n                (this.spacing || ''),\n                (this.invalidFeedback ? 'is-invalid' : '')\n            ].join(' ');\n        },\n\n        hasDefaultSlot() {\n            return !!this.$slots.default;\n        }\n\n    }\n\n};\n\nvar FormGroup = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"form-group\"},[_vm._t(\"default\")],2)},staticRenderFns: [],\n\n    name: 'form-group'\n\n};\n\nconst VueInstaller = {\n    use,\n    script,\n    plugin,\n    plugins,\n    filter,\n    filters,\n    component,\n    components,\n    directive,\n    directives,\n    $plugins: {},\n    $filters: {},\n    $directives: {},\n    $components: {}\n};\n\nfunction use(plugin) {\n    if (typeof window !== 'undefined' && window.Vue) {\n        window.Vue.use(plugin);\n    }\n\n    return plugin;\n}\n\nfunction plugin(Vue, name, def) {\n    if (!VueInstaller.$plugins[name]) {\n        Vue.use(VueInstaller.$plugins[name] = def);\n    }\n}\n\nfunction plugins(Vue, plugins) {\n    each(plugins, (def, name) => {\n        plugin(Vue, name, def);\n    });\n}\n\nfunction filter(Vue, name, def) {\n    if (!VueInstaller.$filters[name]) {\n        Vue.use(VueInstaller.$filters[name] = def);\n    }\n}\n\nfunction filters(Vue, filters) {\n    each(filters, (def, name) => {\n        filter(Vue, name, def);\n    });\n}\n\nfunction component(Vue, name, def) {\n    if (!VueInstaller.$components[name]) {\n        Vue.component(name, VueInstaller.$components[name] = def);\n    }\n}\n\nfunction components(Vue, components) {\n    each(components, (def, name) => {\n        component(Vue, name, def);\n    });\n}\n\nfunction directive(Vue, name, def) {\n    if (!VueInstaller.$directives[name]) {\n        if (isFunction(def)) {\n            Vue.use(VueInstaller.$directives[name] = def);\n        }\n        else {\n            Vue.directive(name, def);\n        }\n    }\n}\n\nfunction directives(Vue, directives) {\n    each(directives, (def, name) => {\n        directive(Vue, name, def);\n    });\n}\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormGroup\n        });\n    }\n\n});\n\nconst COLORS = [\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'light',\n    'dark',\n    'white',\n    'muted'\n];\n\nconst props = {};\n\neach(['border', 'text', 'bg', 'bg-gradient'], namespace => {\n    each(COLORS, color => {\n        props[camelCase(prefix(color, namespace))] = Boolean;\n    });\n});\n\nfunction classes(instance, namespace) {\n    return COLORS.map(color => {\n        return instance[camelCase(color = prefix(color, namespace))] ? color : null;\n    })\n        .filter(value => !!value);\n}\n\nvar Colorable = {\n\n    props: props,\n\n    methods: {\n\n        textColor() {\n            return classes(this, 'text');\n        },\n\n        bgColor() {\n            return classes(this, 'bg');\n        },\n\n        borderColor() {\n            return classes(this, 'border');\n        },\n\n        bgGradientColor() {\n            return classes(this, 'bg-gradient');\n        }\n\n    },\n\n    computed: {\n\n        textColorClasses() {\n            return this.textColor().join(' ').trim() || null;\n        },\n\n        borderColorClasses() {\n            return this.borderColor().join(' ').trim() || null;\n        },\n\n        bgColorClasses() {\n            return this.bgColor().join(' ').trim() || null;\n        },\n\n        bgGradientColorClasses() {\n            return this.bgGradientColor().join(' ').trim() || null;\n        },\n\n        colorableClasses() {\n            const classes = {};\n\n            classes[this.textColorClasses] = !!this.textColorClasses;\n            classes[this.borderColorClasses] = !!this.borderColorClasses;\n            classes[this.bgColorClasses] = !!this.bgColorClasses;\n            classes[this.bgGradientColorClasses] = !!this.bgGradientColorClasses;\n\n            return omitBy(classes, (key$$1, value) => {\n                return !key$$1 || !value;\n            });\n        }\n\n    }\n\n};\n\nvar Screenreaders = {\n\n    props: {\n\n        /**\n         * Should show only for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnly: Boolean,\n\n        /**\n         * Should be focusable for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnlyFocusable: Boolean\n\n    },\n\n    computed: {\n        screenreaderClasses() {\n            return {\n                'sr-only': this.srOnly,\n                'sr-only-focusable': this.srOnlyFocusable\n            };\n        }\n    }\n\n};\n\nvar HelpText = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('small',{staticClass:\"form-text\",class:_vm.classes},[_vm._t(\"default\")],2)},staticRenderFns: [],\n\n    name: 'help-text',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            HelpText\n        });\n    }\n\n});\n\nvar FormLabel = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{class:_vm.classes},[_vm._t(\"default\")],2)},staticRenderFns: [],\n\n    name: 'form-label',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormLabel\n        });\n    }\n\n});\n\nvar FormFeedback = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:{'invalid-feedback': _vm.invalid, 'valid-feedback': _vm.valid && !_vm.invalid}},[_vm._t(\"default\",[_vm._v(_vm._s(_vm.label))])],2)},staticRenderFns: [],\n\n    name: 'form-feedback',\n\n    mixins: [\n        Colorable\n    ],\n\n    props: {\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        invalid: Boolean,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        valid: Boolean\n\n    }\n\n};\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            FormFeedback\n        });\n    }\n\n});\n\nvar MergeClasses = {\n\n    methods: {\n\n        mergeClasses() {\n            let classes = {};\n\n            each([].slice.call(arguments), arg => {\n                if (isObject(arg)) {\n                    extend(classes, arg);\n                }\n                else if (isArray(arg)) {\n                    classes = classes.concat(arg);\n                }\n                else if (arg) {\n                    classes[arg] = true;\n                }\n            });\n\n            return classes;\n        }\n\n    }\n\n};\n\nfunction unit(height) {\n    return isFinite(height) ? height + 'px' : height;\n}\n\nvar BaseType = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"activity-indicator\",class:_vm.classes},_vm._l((_vm.nodes),function(i){return _c('div')}))},staticRenderFns: [],\n\n    props: {\n        nodes: {\n            type: Number,\n            default: 3\n        },\n        size: {\n            type: String,\n            default: ''\n        },\n        prefix: {\n            type: String,\n            default: 'activity-indicator-'\n        }\n    },\n\n    computed: {\n        classes: function() {\n            const classes = {};\n\n            classes[this.$options.name] = !!this.$options.name;\n            classes[this.prefix + this.size.replace(this.prefix, '')] = !!this.size;\n\n            return classes;\n        }\n    }\n\n};\n\nvar ActivityIndicatorDots = {\n\n    name: 'activity-indicator-dots',\n\n    extends: BaseType\n};\n\nvar ActivityIndicatorSpinner = {\n\n    name: 'activity-indicator-spinner',\n\n    extends: BaseType,\n\n    props: extend({}, BaseType.props, {\n        nodes: {\n            type: Number,\n            default: 12\n        }\n    })\n};\n\nvar ActivityIndicator = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.center)?_c('div',{staticClass:\"center-wrapper\",class:{'position-relative': _vm.relative, 'position-fixed': _vm.fixed},style:(_vm.style)},[_c('div',{staticClass:\"center-content d-flex flex-column align-items-center\"},[_c(_vm.component,{tag:\"component\",attrs:{\"size\":_vm.size,\"prefix\":_vm.prefix}}),_vm._v(\" \"),(_vm.label)?_c('div',{staticClass:\"activity-indicator-label\",domProps:{\"innerHTML\":_vm._s(_vm.label)}}):_vm._e()],1)]):_c('div',{staticClass:\"d-flex flex-column justify-content-center align-items-center\",style:(_vm.style)},[_c(_vm.component,{tag:\"component\",attrs:{\"size\":_vm.size,\"prefix\":_vm.prefix}}),_vm._v(\" \"),(_vm.label)?_c('div',{staticClass:\"activity-indicator-label\",domProps:{\"innerHTML\":_vm._s(_vm.label)}}):_vm._e()],1)},staticRenderFns: [],\n\n    name: 'activity-indicator',\n\n    extends: BaseType,\n\n    props: {\n\n        center: Boolean,\n\n        fixed: Boolean,\n\n        label: String,\n\n        relative: Boolean,\n\n        type: {\n            type: String,\n            default: 'dots'\n        },\n\n        height: [String, Number],\n\n        maxHeight: [String, Number],\n\n        minHeight: [String, Number],\n\n        width: [String, Number],\n\n        maxWidth: [String, Number],\n\n        minWidth: [String, Number]\n\n    },\n\n    components: {\n        ActivityIndicatorDots,\n        ActivityIndicatorSpinner\n    },\n\n    computed: {\n\n        style() {\n            return {\n                width: unit(this.width),\n                maxWidth: unit(this.maxWidth),\n                minWidth: unit(this.minWidth),\n                height: unit(this.height),\n                maxHeight: unit(this.maxHeight),\n                minHeight: unit(this.minHeight)\n            };\n        },\n\n        component() {\n            return kebabCase(this.prefix + this.type.replace(this.prefix, ''));\n        }\n    }\n\n};\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            ActivityIndicator\n        });\n    }\n\n});\n\nvar InputField = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form-group',{staticClass:\"input-field\",class:{'has-activity': _vm.activity}},[_vm._t(\"label\",[(_vm.label || _vm.hasDefaultSlot)?_c('form-label',{ref:\"label\",attrs:{\"for\":_vm.id},domProps:{\"innerHTML\":_vm._s(_vm.label)}}):_vm._e()]),_vm._v(\" \"),_c('div',{staticClass:\"position-relative\"},[_vm._t(\"control\",[_c('input',{directives:[{name:\"bind-events\",rawName:\"v-bind-events\",value:(_vm.bindEvents),expression:\"bindEvents\"}],ref:\"control\",class:_vm.mergeClasses(_vm.controlClasses, _vm.colorableClasses),attrs:{\"id\":_vm.id,\"type\":_vm.type,\"name\":_vm.name,\"pattern\":_vm.pattern,\"readonly\":_vm.readonly,\"required\":_vm.required,\"maxlength\":_vm.maxlength,\"placeholder\":_vm.placeholder,\"disabled\":_vm.disabled || _vm.readonly,\"aria-label\":_vm.label,\"aria-describedby\":_vm.id,\"autocomplete\":_vm.autocomplete},domProps:{\"value\":_vm.value},on:{\"input\":function($event){_vm.$emit('input', $event.target.value);}}})]),_vm._v(\" \"),_vm._t(\"activity\",[_c('transition',{attrs:{\"name\":\"slide-fade\"}},[(_vm.activity)?_c('activity-indicator',{key:\"test\",ref:\"activity\",attrs:{\"type\":\"dots\",\"size\":_vm.size}}):_vm._e()],1)]),_vm._v(\" \"),_vm._t(\"feedback\",[(_vm.validFeedback)?_c('form-feedback',{ref:\"feedback\",attrs:{\"valid\":\"\"},domProps:{\"innerHTML\":_vm._s(_vm.validFeedback)}}):(_vm.invalidFeedback)?_c('form-feedback',{ref:\"feedback\",attrs:{\"invalid\":\"\"},domProps:{\"innerHTML\":_vm._s(_vm.invalidFeedback)}}):_vm._e()])],2),_vm._v(\" \"),_vm._t(\"help\",[(_vm.helpText)?_c('help-text',{ref:\"help\",domProps:{\"innerHTML\":_vm._s(_vm.helpText)}}):_vm._e()])],2)},staticRenderFns: [],\n\n    name: 'input-field',\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n};\n\nVueInstaller.use({\n\n    install(Vue, options) {\n        VueInstaller.components({\n            InputField\n        });\n    }\n\n});\n\nconst KEYCODE = {\n    ESC: 27,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    ENTER: 13,\n    SPACE: 32,\n    TAB: 9\n};\n\nconst API_REQUEST_OPTIONS = [\n    'bounds',\n    'location',\n    'component-restrictions',\n    'offset',\n    'radius',\n    'types'\n];\n\nvar PlaceAutocompleteField = {render: function(){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"autocomplete-field\",on:{\"keydown\":_vm.onKeydown,\"keyup\":_vm.onKeyup}},[_c('input-field',{attrs:{\"name\":_vm.name,\"id\":_vm.id,\"type\":_vm.type,\"placeholder\":_vm.placeholder,\"required\":_vm.required,\"disabled\":_vm.disabled || _vm.readonly,\"readonly\":_vm.readonly,\"pattern\":_vm.pattern,\"aria-label\":_vm.label,\"aria-describedby\":_vm.id,\"label\":_vm.label,\"errors\":_vm.errors,\"value\":_vm.value,\"autocomplete\":\"no\"},on:{\"input\":function($event){_vm.$emit('input', _vm.query);},\"focus\":_vm.onFocus,\"blur\":_vm.onBlur},model:{value:(_vm.query),callback:function ($$v) {_vm.query=$$v;},expression:\"query\"}},[(_vm.activity)?_c('activity-indicator',{attrs:{\"size\":\"xs\",\"type\":\"spinner\"}}):_vm._e()],1),_vm._v(\" \"),(_vm.predictions && _vm.showPredictions)?_c('place-autocomplete-list',{attrs:{\"items\":_vm.predictions},on:{\"item:click\":_vm.onItemClick,\"item:blur\":_vm.onItemBlur}}):_vm._e()],1)},staticRenderFns: [],\n\n    name: 'place-autocomplete-field',\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        FormGroup,\n        InputField,\n        ActivityIndicator,\n        PlaceAutocompleteList\n    },\n\n    props: {\n\n        'api-key': {\n            type: String,\n            required: true\n        },\n\n        'base-uri': {\n            type: String,\n            default: 'https://maps.googleapis.com/maps/api/js'\n        },\n\n        'libraries': {\n            type: Array,\n            default() {\n                return ['geometry', 'places'];\n            }\n        },\n\n        'bounds': {\n            type: [Boolean, Object, String],\n            default: false\n        },\n\n        'location': {\n            type: [Boolean, Object, String],\n            default: false\n        },\n\n        'component-restrictions': {\n            type: [Boolean, Object, String],\n            default: false\n        },\n\n        'offset': {\n            type: Boolean,\n            default: false\n        },\n\n        'radius': {\n            type: Boolean,\n            default: false\n        },\n\n        'types': {\n            type: [Boolean, Array],\n            default: false\n        }\n\n    },\n\n    methods: {\n\n        getInputElement() {\n            return this.$el.querySelector('input');\n        },\n\n        getRequestOptions() {\n            const options = {\n                input: this.getInputElement().value\n            };\n\n            for (let i in API_REQUEST_OPTIONS) {\n                if (this[i] !== undefined || this[i] !== null) {\n                    options[i] = this[i];\n                }\n            }\n\n            return options;\n        },\n\n        select(place) {\n            geocode({ placeId: place.place_id }).then(response => {\n                this.hide();\n                this.$emit('input', this.query = response[0].formatted_address);\n                this.$emit('select', place, response[0]);\n            });\n        },\n\n        search() {\n            return new Promise((resolve, reject) => {\n                if (!this.getInputElement().value) {\n                    this.predictions = false;\n                    this.showPredictions = false;\n                    // reject(new Error('Input empty'));\n                }\n                else {\n                    this.activity = true;\n\n                    this.$service.getPlacePredictions(this.getRequestOptions(), (response, status) => {\n                        this.activity = false;\n\n                        switch (status) {\n                        case window.google.maps.places.PlacesServiceStatus.OK:\n                            resolve(response);\n                            break;\n                        default:\n                            reject(new Error(`Error with status: ${status}`));\n                        }\n                    });\n                }\n            });\n        },\n\n        hide() {\n            this.showPredictions = false;\n        },\n\n        show() {\n            this.showPredictions = true;\n        },\n\n        up() {\n            const focused = this.$el.querySelector('a:focus');\n\n            if (focused && focused.parentElement.previousElementSibling) {\n                focused.parentElement.previousElementSibling.querySelector('a').focus();\n            }\n            else {\n                const links = this.$el.querySelectorAll('a');\n                links[links.length - 1].focus();\n            }\n        },\n\n        down() {\n            const focused = this.$el.querySelector('a:focus');\n\n            if (focused && focused.parentElement.nextElementSibling) {\n                focused.parentElement.nextElementSibling.querySelector('a').focus();\n            }\n            else {\n                this.$el.querySelector('a').focus();\n            }\n        },\n\n        onKeydown(event) {\n            const element = this.$el.querySelector('[tabindex]');\n\n            if (element && event.keyCode === KEYCODE.TAB) {\n                event.preventDefault() && element.focus();\n            }\n        },\n\n        onKeyup(event) {\n            switch (event.keyCode) {\n            case KEYCODE.ENTER:\n            case KEYCODE.SPACE:\n                if (this.$el.querySelector('.is-focused')) {\n                    this.$el.querySelector('.is-focused a').dispatchEvent(new Event('mousedown'));\n                }\n                return;\n            case KEYCODE.ESC:\n                this.hide();\n                this.getInputElement().blur();\n                return;\n            case KEYCODE.UP:\n                this.up();\n                event.preventDefault();\n                return;\n            case KEYCODE.DOWN:\n                this.down();\n                event.preventDefault();\n                return;\n            }\n\n            this.search().then(response => {\n                this.predictions = response;\n                this.showPredictions = true;\n            }, error => {\n                if (error) {\n                    this.predictions = false;\n                }\n            });\n        },\n\n        onFocus(event) {\n            if (this.query) {\n                if (!this.predictions.length) {\n                    this.onKeyup(event);\n                }\n\n                this.show();\n            }\n        },\n\n        onBlur(event) {\n            if (!this.$el.contains(event.relatedTarget)) {\n                this.hide();\n            }\n        },\n\n        onItemBlur(event) {\n            this.onBlur(event);\n        },\n\n        onItemClick(event, child) {\n            this.select(child.item);\n            this.predictions = false;\n        }\n\n    },\n\n    mounted() {\n        script(`${this.baseUri}?key=${this.apiKey}&libraries=${this.libraries.join(',')}`).then(() => {\n            this.$geocoder = new window.google.maps.Geocoder();\n            this.$service = new window.google.maps.places.AutocompleteService();\n            this.loaded = true;\n            this.$emit('loaded');\n        });\n    },\n\n    data() {\n        return {\n            query: this.value,\n            activity: false,\n            loaded: false,\n            predictions: false,\n            showPredictions: false\n        };\n    }\n\n    /*\n    {\n        // An array of types specifies an explicit type or a type collection, as listed in the supported types below. If nothing is specified, all types are returned. In general only a single type is allowed. The exception is that you can safely mix the geocode and establishment types, but note that this will have the same effect as specifying no types. The supported types are: geocode instructs the Places service to return only geocoding results, rather than business results. address instructs the Places service to return only geocoding results with a precise address. establishment instructs the Places service to return only business results. the (regions) type collection instructs the Places service to return any result matching the following types: locality sublocality postal_code country administrative_area1 administrative_area2 the (cities) type collection instructs the Places service to return results that match either locality or administrative_area3.\n        // Possible values: geocode, address, establishment, cities, locality, sublocality, postal_code, country, administrative_area1, administrative_area2\n        type: undefined,\n\n        // is a google.maps.LatLngBounds|google.maps.LatLngBoundsLiteral object specifying the area in which to search for places. The results are biased towards, but not restricted to, places contained within these bounds.\n        bounds: undefined,\n\n        // is a boolean specifying whether the API must return only those places that are strictly within the region defined by the given bounds. The API does not return results outside this region even if they match the user input.\n        strictBounds: true|false,\n\n        // can be used to restrict results to specific groups. Currently, you can use componentRestrictions to filter by up to 5 countries. Countries must be passed as as a two-character, ISO 3166-1 Alpha-2 compatible country code. Multiple countries must be passed as a list of country codes. z\n        componentRestrictions: undefined,\n\n        // can be used to instruct the Autocomplete widget to retrieve only Place IDs. On calling getPlace() on the Autocomplete object, the PlaceResult made available will only have the place id, types and name properties set. You can use the returned place ID with calls to the Places, Geocoding, Directions or Distance Matrix services.\n        placeIdOnly: undefined,\n\n        // is a google.maps.LatLng for prediction biasing. Predictions will be biased towards the given location and radius. Alternatively, bounds can be used.\n        location: undefined,\n\n        // is a number to determine the character position in the input term at which the service uses text for predictions (the position of the cursor in the input field).\n        offset: undefined,\n\n        // is a number to the radius of the area used for prediction biasing. The radius is specified in meters, and must always be accompanied by a location property. Alternatively, bounds can be used.\n        radius: undefined\n    }\n    */\n};\n\nfunction install(Vue, options) {\n  Vue.directive('place-autofill', PlaceAutofill);\n  Vue.component('place-autocomplete-field', PlaceAutocompleteField);\n  Vue.component('place-autocomplete-list', PlaceAutocompleteList);\n  Vue.component('place-autocomplete-list-item', PlaceAutocompleteListItem);\n}\n\nif (window && window.Vue) {\n  window.Vue.use(install);\n}\n\nexport default install;\nexport { PlaceAutofill, PlaceAutocompleteField, PlaceAutocompleteList, PlaceAutocompleteListItem };\n//# sourceMappingURL=vue-place-autocomplete.es.js.map\n","const STYLE_ATTRIBUTES = [\n    'font',\n    'fontFamily',\n    'fontKerning',\n    'fontSize',\n    'fontStretch',\n    'fontStyle',\n    'fontVariant',\n    'fontVariantLigatures',\n    'fontVariantCaps',\n    'fontVariantNumeric',\n    'fontVariantEastAsian',\n    'fontWeight',\n    'lineHeight',\n    'letterSpacing',\n    'padding',\n    'margin',\n    'textAlign',\n    'textAlignLast',\n    'textDecoration',\n    'textDecorationLine',\n    'textDecorationStyle',\n    'textDecorationColor',\n    'textDecorationSkipInk',\n    'textDecorationPosition',\n    'textIndent',\n    'textRendering',\n    'textShadow',\n    'textSizeAdjust',\n    'textOverflow',\n    'textTransform',\n    'width',\n    'wordBreak',\n    'wordSpacing',\n    'wordWrap'\n];\n\nfunction int(str) {\n    if(typeof str === 'number') {\n        return str;\n    }\n    else if(!str || !str.replace) {\n        return 0;\n    }\n\n    return parseInt(str.replace(/[^\\d.]+/g, ''));\n}\n\nfunction input(div, el) {\n    div.innerHTML = el.value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n}\n\nfunction height(el) {\n    return int(el.getBoundingClientRect().height);\n}\n\nfunction style(el, attr) {\n    return window.getComputedStyle(el)[attr];\n}\n\nfunction resize(target, div, minHeight, maxHeight) {\n    const dynamicHeight = Math.max(height(div) + int(style(div, 'lineHeight')), minHeight);\n    target.style.height = ((!maxHeight || dynamicHeight < maxHeight) ? dynamicHeight : maxHeight) + 'px';\n}\n\n/*\nfunction setMinHeight(div, el) {\n    div.style.minHeight = height(el) + 'px';\n}\n*/\n\nfunction mimic(el) {\n    const div = document.createElement('div');\n    const styles = window.getComputedStyle(el);\n\n    for(let i in STYLE_ATTRIBUTES) {\n        const key = STYLE_ATTRIBUTES[i];\n\n        div.style[key] = styles[key];\n    }\n\n    div.style.position = 'absolute';\n    div.style.bottom = '100%';\n    div.style.zIndex = -1;\n    div.style.visibility = 'hidden';\n\n    return div;\n}\n\nfunction init(el, maxHeight) {\n    const div = mimic(el);\n    const minHeight = height(el);\n\n    el.addEventListener('input', event => {\n        input(div, event.target);\n        resize(el, div, minHeight, maxHeight);\n    });\n\n    document.body.appendChild(div);\n\n    input(div, el);\n    resize(el, div, minHeight, maxHeight);\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        if(el.tagName.toLowerCase() !== 'textarea') {\n            el = el.querySelector('textarea');\n        }\n\n        if(!el) {\n            throw new Error('A textarea is required for the v-autogrow directive.');\n        }\n\n        init(el, binding.value);\n    }\n\n};\n","export default {\n\n    computed: {\n\n        colorableClasses() {\n            const classes = {};\n\n            for(let i in this.$attrs) {\n                if(i.match(/^bg|text|border|bg-gradient-/)) {\n                    classes[i] = true;\n                }\n            }\n\n            return classes;\n        }\n\n    }\n\n};\n","import { each, extend, isArray, isObject } from '../../Helpers/Functions';\n\nexport default {\n\n    methods: {\n\n        mergeClasses() {\n            let classes = {};\n\n            each([].slice.call(arguments), arg => {\n                if(isObject(arg)) {\n                    extend(classes, arg);\n                }\n                else if(isArray(arg)) {\n                    classes = classes.concat(arg);\n                }\n                else if(arg) {\n                    classes[arg] = true;\n                }\n            });\n\n            return classes;\n        }\n\n    }\n\n};\n","import prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport { each, isArray, isObject } from '../../Helpers/Functions';\n\nexport default {\n\n    inheritAttrs: false,\n\n    mixins: [\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        /**\n         * The autocomplete attribute value.\n         *\n         * @property String\n         */\n        // autocomplete: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        // id: [Number, String],\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: [Number, String],\n\n        /**\n         * The field name attribute value.\n         *\n         * @property String\n         */\n        // name: String,\n\n        /**\n         * The field id attribute value.\n         *\n         * @property String\n         */\n        value: {\n            default: null\n        },\n\n        /**\n         * The placeholder attribute value.\n         *\n         * @property String\n         */\n        // placeholder: String,\n\n        /**\n         * Is the field required.\n         *\n         * @property String\n         */\n        // required: Boolean,\n\n        /**\n         * Add form-group wrapper to input\n         *\n         * @property String\n         */\n        group: {\n            type: Boolean,\n            value: true\n        },\n\n        /**\n         * The regex pattern for validation.\n         *\n         * @property String\n         */\n        // pattern: String,\n\n        /**\n         * An inline field validation error.\n         *\n         * @property String|Boolean\n         */\n        error: String,\n\n        /**\n         * An inline field validation errors passed as object with key/value\n         * pairs. If errors passed as an object, the form name will be used for\n         * the key.\n         *\n         * @property Object|Boolean\n         */\n        errors: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n\n        /**\n         * Some feedback to add to the field once the field is successfully\n         * valid.\n         *\n         * @property String\n         */\n        feedback: [String, Array],\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'change', 'click', 'keyup', 'keydown', 'progress', 'paste'];\n            }\n        },\n\n        /**\n         * The default class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-control'\n        },\n\n        /**\n         * Hide the label for browsers, but leave it for screen readers.\n         *\n         * @property String\n         */\n        hideLabel: Boolean,\n\n        /**\n         * Additional margin/padding classes for fine control of spacing\n         *\n         * @property String\n         */\n        spacing: String,\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        },\n\n        /**\n         * Display the form field inline\n         *\n         * @property String\n         */\n        inline: Boolean,\n\n        /**\n         * If the form control is readonly, display only as text?\n         *\n         * @property String\n         */\n        // plaintext: Boolean,\n\n        /**\n         * Is the form control readonly?\n         *\n         * @property String\n         */\n        // readonly: Boolean,\n\n        /**\n         * Is the form control disabled?\n         *\n         * @property String\n         */\n        // disabled: Boolean,\n\n        /**\n         * Some instructions to appear under the field label\n         *\n         * @property String\n         */\n        helpText: [Number, String],\n\n        /**\n         * The maxlength attribute\n         *\n         * @property String\n         */\n        maxlength: [Number, String]\n\n    },\n\n    directives: {\n        bindEvents: {\n            bind(el, binding, vnode) {\n                const emptyClass = 'is-empty';\n\n                // Add/remove the has-focus class from the form control\n                el.addEventListener('focus', event => event.target.classList.add('has-focus'));\n                el.addEventListener('blur', event => event.target.classList.remove('has-focus'));\n                el.addEventListener('input', e => {\n                    el.classList[!el.value ? 'add' : 'remove'](emptyClass);\n                });\n\n                if(!el.value) {\n                    el.classList.add(emptyClass);\n                }\n\n                // Bubble the native events up to the vue component.\n                each(vnode.context.bindEvents, name => {\n                    el.addEventListener(name, event => {\n                        vnode.context.$emit(name, event);\n                    });\n                });\n            }\n        }\n    },\n\n    methods: {\n\n        blur() {\n            if(this.getInputField()) {\n                this.getInputField().blur();\n            }\n        },\n\n        focus() {\n            if(this.getInputField()) {\n                this.getInputField().focus();\n            }\n        },\n\n        getInputField() {\n            return this.$el.querySelector(\n                '.form-control, input, select, textarea'\n            );\n        },\n\n        getFieldErrors() {\n            let errors = this.error || this.errors;\n\n            if(isObject(this.errors)) {\n                errors = this.errors[this.name || this.id];\n            }\n\n            return !errors || isArray(errors) || isObject(errors) ? errors : [errors];\n        }\n\n    },\n\n    computed: {\n\n        id() {\n            return this.$attrs.id;\n        },\n\n        name() {\n            return this.$attrs.name;\n        },\n\n        controlAttributes() {\n            const classes = this.mergeClasses(\n                this.controlClasses, this.colorableClasses\n            );\n\n            return Object.keys(this.$attrs)\n                .concat([['class', classes]])\n                .reduce((carry, key) => {\n                    if(isArray(key)) {\n                        carry[key[0]] = key[1];\n                    }\n                    else {\n                        carry[key] = this[key] || this.$attrs[key];\n                    }\n\n                    return carry;\n                }, {});\n        },\n\n        controlClass() {\n            return this.defaultControlClass + (this.plaintext ? '-plaintext' : '');\n        },\n\n        controlSizeClass() {\n            return prefix(this.size, this.controlClass);\n        },\n\n        controlClasses() {\n            return [\n                (this.spacing || ''),\n                this.controlClass,\n                this.controlSizeClass,\n                (this.invalidFeedback ? 'is-invalid' : '')\n            ].join(' ');\n        },\n\n        hasDefaultSlot() {\n            return !!this.$slots.default;\n        },\n\n        invalidFeedback() {\n            const errors = this.getFieldErrors();\n\n            return this.error || (\n                isArray(errors) ? errors.join('<br>') : errors\n            );\n        },\n\n        validFeedback() {\n            return isArray(this.feedback) ? this.feedback.join('<br>') : this.feedback;\n        }\n\n    }\n\n};\n","<script>\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport { isFunction } from 'vue-interface/src/Helpers/Functions';\n\nexport default {\n\n    mixins: [\n        FormControl\n    ],\n\n    props: {\n\n        form: {\n            type: Object,\n            required: true\n        },\n\n        page: {\n            type: Object,\n            required: true\n        },\n\n        question: {\n            type: Object,\n            required: true\n        },\n\n        errors: {\n            type: Object,\n            required: true\n        }\n\n    },\n\n    directives: {\n\n        changed(el, binding, vnode) {\n            el.addEventListener('change', event => {\n                if(event.target.checked && isFunction(binding.value)) {\n                    binding.value(el);\n                }\n            });\n        }\n\n    }\n\n};\n</script>\n","export default {\n\n    props: {\n\n        /**\n         * Should show only for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnly: Boolean,\n\n        /**\n         * Should be focusable for screenreaders\n         *\n         * @property Boolean\n         */\n        srOnlyFocusable: Boolean\n\n    },\n\n    computed: {\n        screenreaderClasses() {\n            return {\n                'sr-only': this.srOnly,\n                'sr-only-focusable': this.srOnlyFocusable\n            };\n        }\n    }\n\n};\n","<template>\n\n    <small class=\"form-text\" :class=\"classes\"><slot /></small>\n\n</template>\n\n<script>\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'help-text',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"form-group\">\n        <slot/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'form-group'\n\n};\n</script>\n\n<style lang=\"scss\">\n.form-group {\n    &, .form-group-inner {\n        position: relative;\n    }\n\n    .activity-indicator {\n        position: absolute;\n        right: 0;\n        top: 50%;\n        transform: translate(-1rem, -50%);\n        transition: all .25s ease-in;\n    }\n}\n</style>\n","<template>\n\n    <label :class=\"classes\"><slot/></label>\n\n</template>\n\n<script>\nimport { extend } from '../../Helpers/Functions';\nimport Colorable from '../../Mixins/Colorable/Colorable';\nimport Screenreaders from '../../Mixins/Screenreaders/Screenreaders';\n\nexport default {\n\n    name: 'form-label',\n\n    mixins: [\n        Colorable,\n        Screenreaders\n    ],\n\n    computed: {\n        classes() {\n            return extend({}, this.screenreaderClasses, this.colorableClasses);\n        }\n    }\n\n};\n</script>\n","<template>\n    <component\n        v-bind=\"$attrs\"\n        v-model=\"testValue\"\n        :is=\"element\"\n        :aria-label=\"label || name || id\"\n        :aria-describedby=\"id || name\"\n        @input=\"$emit('input', $event.target.value)\">\n        <slot/>\n    </component>\n</div>\n\n</template>\n\n<script>\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\n// import { extend, omitBy, isNull, isUndefined } from '../../Helpers/Functions';\n\nexport default {\n\n    name: 'form-control',\n\n    mixins: [\n        Colorable,\n        FormControl\n    ],\n\n    props: {\n\n        element: {\n            type: String,\n            required: true\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"{'invalid-feedback': invalid, 'valid-feedback': valid && !invalid}\">\n        <slot>{{label}}</slot>\n    </div>\n\n</template>\n\n<script>\nimport Colorable from '../../Mixins/Colorable/Colorable';\n\nexport default {\n\n    name: 'form-feedback',\n\n    mixins: [\n        Colorable\n    ],\n\n    props: {\n\n        /**\n         * The value of label element. If no value, no label will appear.\n         *\n         * @property String\n         */\n        label: String,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        invalid: Boolean,\n\n        /**\n         * Should the feedback marked as invalid\n         *\n         * @property String\n         */\n        valid: Boolean\n\n    }\n\n};\n</script>\n","<template>\n    <div class=\"activity-indicator\" :class=\"classes\">\n        <div v-for=\"i in nodes\"></div>\n    </div>\n</template>\n\n<script>\nexport default {\n\n    props: {\n        nodes: {\n            type: Number,\n            default: 3\n        },\n        size: {\n            type: String,\n            default: ''\n        },\n        prefix: {\n            type: String,\n            default: 'activity-indicator-'\n        }\n    },\n\n    computed: {\n        classes: function() {\n            const classes = {};\n\n            classes[this.$options.name] = !!this.$options.name;\n            classes[this.prefix + this.size.replace(this.prefix, '')] = !!this.size;\n\n            return classes;\n        }\n    }\n\n};\n</script>\n","<script>\nimport BaseType from './BaseType';\n\nexport default {\n\n    name: 'activity-indicator-dots',\n\n    extends: BaseType\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n$activity-indicator-dot-size: .6rem;\n\n.activity-indicator-dots {\n\n    & > div {\n        border-radius: 100%;\n        display: inline-block;\n        background-color: $gray-900;\n        width: $activity-indicator-dot-size;\n        height: $activity-indicator-dot-size;\n        animation: activity-indicator-dots 1.4s infinite ease-in-out both;\n    }\n\n    & > div:not(:last-child) {\n        margin-right: $activity-indicator-dot-size * .33;\n    }\n\n    &.activity-indicator-xs > div {\n        width: $activity-indicator-dot-size * .5;\n        height: $activity-indicator-dot-size * .5;\n    }\n\n    &.activity-indicator-sm > div {\n        width: $activity-indicator-dot-size * .75;\n        height: $activity-indicator-dot-size * .75;\n    }\n\n    &.activity-indicator-md > div {\n        width: $activity-indicator-dot-size * 1;\n        height: $activity-indicator-dot-size * 1;\n    }\n\n    &.activity-indicator-lg > div {\n        width: $activity-indicator-dot-size * 1.5;\n        height: $activity-indicator-dot-size * 1.5;\n    }\n\n    &.activity-indicator-xl > div {\n        width: $activity-indicator-dot-size * 2;\n        height: $activity-indicator-dot-size * 2;\n    }\n\n    @for $i from 0 through 12 {\n        & > div:nth-child(#{$i + 1}) {\n            animation-delay: $i * .16s;\n        }\n    }\n\n    @keyframes activity-indicator-dots {\n        0%, 80%, 100% {\n            transform: scale(0);\n        } 40% {\n            transform: scale(1.0);\n        }\n    }\n}\n\n.btn-activity-indicator-dots {\n    &:not(.btn-warning) .activity-indicator-dots > div {\n        background: white;\n    }\n}\n\n</style>\n","<script>\nimport BaseType from './BaseType';\nimport { extend } from '../../../Helpers/Functions';\n\nexport default {\n\n    name: 'activity-indicator-spinner',\n\n    extends: BaseType,\n\n    props: extend({}, BaseType.props, {\n        nodes: {\n            type: Number,\n            default: 12\n        }\n    })\n};\n</script>\n\n<style lang=\"scss\">\n@import './node_modules/bootstrap/scss/functions.scss';\n@import './node_modules/bootstrap/scss/variables.scss';\n\n$activity-indicator-spinner-size: $font-size-base * 2.25;\n$activity-indicator-spinner-width: 10%;\n$activity-indicator-spinner-height: 30%;\n$activity-indicator-spinner-delay: 1s;\n\n@mixin spinner-rotate-selectors($start:1, $end:16, $delay:1.2s) {\n    @for $i from $start through $end {\n        & > div:first-child:nth-last-child(#{$i}),\n        & > div:first-child:nth-last-child(#{$i}) ~ div {\n            @include spinner-rotate-transform($i, $delay);\n        }\n    }\n}\n\n@mixin spinner-rotate-transform($total, $delay:1.2s) {\n    @for $i from 1 through $total {\n        &:nth-child(#{$i}) {\n            transform: rotate(#{360 / $total * $i}deg);\n\n            &:before {\n                animation-delay: -#{$delay - ($delay / $total * ($i - 1))};\n            }\n        }\n    }\n}\n\n.activity-indicator-spinner {\n    position: relative;\n    width: $activity-indicator-spinner-size;\n    height: $activity-indicator-spinner-size;\n\n    & > div  {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        left: 0;\n        top: 0;\n\n        &:before {\n            content: '';\n            display: block;\n            margin: 0 auto;\n            background-color: $gray-900;\n            width: $activity-indicator-spinner-width;\n            height: $activity-indicator-spinner-height;\n            border-radius: 5px;\n            animation: activity-indicator-spinner $activity-indicator-spinner-delay infinite ease-in-out both;\n        }\n    }\n\n    &.activity-indicator-xs {\n        width: $activity-indicator-spinner-size * .5;\n        height: $activity-indicator-spinner-size * .5;\n    }\n    &.activity-indicator-sm {\n        width: $activity-indicator-spinner-size * .75;\n        height: $activity-indicator-spinner-size * .75;\n    }\n    &.activity-indicator-md {\n        width: $activity-indicator-spinner-size * 1;\n        height: $activity-indicator-spinner-size * 1;\n    }\n    &.activity-indicator-lg {\n        width: $activity-indicator-spinner-size * 1.5;\n        height: $activity-indicator-spinner-size * 1.5;\n    }\n    &.activity-indicator-xl {\n        width: $activity-indicator-spinner-size * 2;\n        height: $activity-indicator-spinner-size * 2;\n    }\n\n    @include spinner-rotate-selectors(1, 12, $activity-indicator-spinner-delay);\n\n    @keyframes activity-indicator-spinner {\n        0%, 39%, 100% { opacity: 0; }\n        40% { opacity: 1; }\n    }\n}\n\n.btn-activity-indicator-spinner {\n    &:not(.btn-warning) .activity-indicator-spinner > div:before {\n        background-color: white;\n    }\n}\n\n</style>\n","<template>\n    <div v-if=\"center\" class=\"center-wrapper\" :class=\"{'position-relative': relative, 'position-fixed': fixed}\" :style=\"style\">\n        <div class=\"center-content d-flex flex-column align-items-center\">\n            <component :is=\"component\" :size=\"size\" :prefix=\"prefix\"/>\n            <div v-if=\"label\" v-html=\"label\" class=\"activity-indicator-label\"/>\n        </div>\n    </div>\n    <div v-else class=\"d-flex flex-column justify-content-center align-items-center\" :style=\"style\">\n        <component :is=\"component\" :size=\"size\" :prefix=\"prefix\"/>\n        <div v-if=\"label\" v-html=\"label\" class=\"activity-indicator-label\"/>\n    </div>\n</template>\n\n<script>\nimport unit from '../../Helpers/Unit';\nimport BaseType from './Types/BaseType';\nimport ActivityIndicatorDots from './Types/Dots';\nimport { kebabCase } from '../../Helpers/Functions';\nimport ActivityIndicatorSpinner from './Types/Spinner';\n\nexport default {\n\n    name: 'activity-indicator',\n\n    extends: BaseType,\n\n    props: {\n\n        center: Boolean,\n\n        fixed: Boolean,\n\n        label: String,\n\n        relative: Boolean,\n\n        type: {\n            type: String,\n            default: 'dots'\n        },\n\n        height: [String, Number],\n\n        maxHeight: [String, Number],\n\n        minHeight: [String, Number],\n\n        width: [String, Number],\n\n        maxWidth: [String, Number],\n\n        minWidth: [String, Number]\n\n    },\n\n    components: {\n        ActivityIndicatorDots,\n        ActivityIndicatorSpinner\n    },\n\n    computed: {\n\n        style() {\n            return {\n                width: unit(this.width),\n                maxWidth: unit(this.maxWidth),\n                minWidth: unit(this.minWidth),\n                height: unit(this.height),\n                maxHeight: unit(this.maxHeight),\n                minHeight: unit(this.minHeight)\n            };\n        },\n\n        component() {\n            return kebabCase(this.prefix + this.type.replace(this.prefix, ''));\n        }\n    }\n\n};\n</script>\n","<template>\n\n    <form-group :class=\"{'has-activity': activity}\">\n\n        <slot name=\"label\">\n            <form-label ref=\"label\" v-if=\"label || hasDefaultSlot\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <div class=\"form-group-inner\">\n            <slot name=\"control\" data-test=\"test\">\n                <input\n                    v-bind-events\n                    v-bind=\"controlAttributes\"\n                    :value=\"value\"\n                    @input=\"$emit('input', $event.target.value)\"\n                />\n            </slot>\n\n            <slot name=\"activity\">\n                <transition name=\"slide-fade\">\n                    <activity-indicator key=\"test\" v-if=\"activity\" ref=\"activity\" type=\"dots\" :size=\"size\"/>\n                </transition>\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" ref=\"feedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-else-if=\"invalidFeedback\" ref=\"feedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n        </div>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" ref=\"help\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormControl from '../FormControl';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport ActivityIndicator from '../ActivityIndicator';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nexport default {\n\n    name: 'input-field',\n\n    mixins: [\n        Colorable,\n        FormControlMixin\n    ],\n\n    components: {\n        HelpText,\n        FormControl,\n        FormGroup,\n        FormLabel,\n        FormFeedback,\n        ActivityIndicator\n    },\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        }\n\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.input-field {\n    .slide-fade-enter,\n    .slide-fade-leave-to {\n        opacity: 1;\n        transform: translate(25%, -50%);\n    }\n}\n</style>\n","<template>\n\n    <input-field\n        v-model=\"form[name]\"\n        type=\"email\"\n        placeholder=\"Email Address\"\n        :name=\"name\"\n        :id=\"question.id\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</div>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'alt-email-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form[name]\"\n        type=\"phone\"\n        :name=\"name\"\n        :id=\"question.id\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'alt-phone-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"radio\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValue === value || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"$emit('change', $event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"radio\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValue === value || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"$emit('change', $event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormFeedback from '../FormFeedback';\nimport prefix from '../../Helpers/Prefix';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'radio-field',\n\n    components: {\n        HelpText,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValue'\n    },\n\n    props: {\n\n        /**\n         * An array of event names that correlate with callback functions\n         *\n         * @property Function\n         */\n        bindEvents: {\n            type: Array,\n            default() {\n                return ['focus', 'blur', 'input', 'click', 'keyup', 'keydown', 'progress'];\n            }\n        },\n\n        /**\n         * Is this a custom element\n         *\n         * @property String\n         */\n        custom: Boolean,\n\n        /**\n         * Display the form field and label inline\n         *\n         * @property Function\n         */\n        inline: Boolean,\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checked: Boolean,\n\n        /**\n         * The checked value\n         *\n         * @property String\n         */\n        checkedValue: [Boolean, Number, String, Object],\n\n        /**\n         * The class name assigned to the control element\n         *\n         * @property String\n         */\n        defaultControlClass: {\n            type: String,\n            default: 'form-check'\n        }\n\n    },\n\n    computed: {\n\n        labelClass() {\n            return prefix('label', this.controlClass);\n        },\n\n        inputClass() {\n            return prefix('input', this.controlClass);\n        },\n\n        inlineClass() {\n            return prefix('inline', this.controlClass);\n        },\n\n        controlClass() {\n            return this.custom ? 'custom-control' : this.defaultControlClass;\n        },\n\n        customControlClass() {\n            return this.custom ? prefix(this.$options.name.replace('-field', ''), 'custom') : '';\n        },\n\n        sizeableClass() {\n            return prefix(this.size, 'form-control');\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <div :class=\"mergeClasses(controlClass, customControlClass, sizeableClass, inline ? inlineClass : '')\">\n\n        <template v-if=\"custom && id\">\n            <input\n                v-bind-events\n                type=\"checkbox\"\n                :name=\"name\"\n                :id=\"id\"\n                :value=\"value\"\n                :required=\"required\"\n                :disabled=\"disabled || readonly\"\n                :readonly=\"readonly\"\n                :pattern=\"pattern\"\n                :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                @change=\"update($event.target.value)\">\n\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <slot>{{label}}</slot>\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n\n        </template>\n\n        <template v-else>\n            <label :for=\"id\" :class=\"mergeClasses(labelClass, colorableClasses)\">\n                <input\n                    v-bind-events\n                    type=\"checkbox\"\n                    :name=\"name\"\n                    :id=\"id\"\n                    :value=\"value\"\n                    :required=\"required\"\n                    :disabled=\"disabled || readonly\"\n                    :readonly=\"readonly\"\n                    :pattern=\"pattern\"\n                    :checked=\"checkedValues.indexOf(value) !== -1 || checked\"\n                    :class=\"mergeClasses(inputClass, (invalidFeedback ? 'is-invalid' : ''))\"\n                    @change=\"update($event.target.value)\">\n\n                <slot>{{label}}</slot>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </label>\n        </template>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n    </div>\n</template>\n\n<script>\nimport RadioField from '../RadioField';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'checkbox-field',\n\n    extends: RadioField,\n\n    mixins: [\n        MergeClasses\n    ],\n\n    model: {\n        event: 'change',\n        prop: 'checkedValues'\n    },\n\n    props: {\n\n        /**\n         * The checked values\n         *\n         * @property String\n         */\n        checkedValues: {\n            type: Array,\n            default() {\n                return [];\n            }\n        }\n\n    },\n\n    methods: {\n\n        update(value) {\n            const checked = this.checkedValues.slice(0);\n            const index = this.checkedValues.indexOf(value);\n\n            if(index === -1) {\n                checked.push(value);\n            }\n            else {\n                checked.splice(index, 1);\n            }\n\n            this.$emit('change', checked);\n        }\n\n    }\n};\n</script>\n","<template>\n\n    <div class=\"form-group\" :class=\"{'is-invalid': !!invalidFeedback}\">\n\n        <label>\n            {{question.question}}\n            <sup v-if=\"question.required\">*</sup>\n        </label>\n\n        <checkbox-field\n            v-model=\"form[name]\"\n            v-for=\"(answer, key) in question.answers\"\n            :key=\"key\"\n            :label=\"answer\"\n            :value=\"answer\"\n            :checkedValues=\"value || []\"\n            :name=\"name\"\n            :id=\"`${name}_${key}`\"\n            @change=\"updated\"/>\n\n        <template v-if=\"question.accept_other\">\n            <checkbox-field v-model=\"form[name]\" v-changed label=\"Other:\" value=\"other\" :name=\"name\" :id=\"`${name}_50`\" :checkedValues=\"value || []\" @change=\"updated\"/>\n            <input v-model=\"form[`${name}_other`]\" type=\"text\" class=\"form-control\" :class=\"{'is-invalid': errors[name]}\" :name=\"`${name}_other`\" :id=\"`${name}_other`\" @input=\"updated($event.target.value)\">\n        </template>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n    </div>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport FormFeedback from 'vue-interface/src/Components/FormFeedback';\nimport CheckboxField from 'vue-interface/src/Components/CheckboxField';\n\nexport default {\n\n    name: 'checkbox-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        FormFeedback,\n        CheckboxField\n    }\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form.city\"\n        id=\"city\"\n        name=\"city\"\n        placeholder=\"City\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'city-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","export default {\n\n    methods: {\n\n        getSlot(slot) {\n            return this.$slots[slot];\n        },\n\n        hasSlot(slot) {\n            return !!this.$slots[slot];\n        },\n\n        hasSlots(slots) {\n            for(let i in slots) {\n                if(!this.hasSlot(slots[i])) {\n                    return false;\n                }\n            }\n        }\n\n    },\n\n    computed: {\n\n        hasDefaultSlot() {\n            return this.hasSlot('default');\n        }\n\n    }\n\n};\n","import prefix from '../../Helpers/Prefix/Prefix';\n\nexport default {\n\n    props: {\n\n        /**\n         * The size of the form control\n         *\n         * @property String\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validate: value => ['sm', 'md', 'lg'].indexOf(value) !== -1\n        }\n\n    },\n\n    computed: {\n\n        sizeableClassPrefix() {\n            return this.$options.name;\n        },\n\n        sizeableClass() {\n            return prefix(this.size, this.sizeableClassPrefix);\n        }\n\n    }\n\n};\n","<template>\n\n    <span class=\"input-group-text\" :id=\"id\">\n        <slot>{{ text }}</slot>\n    </span>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'input-group-text',\n\n    props: {\n\n        /**\n         * The id attribute\n         *\n         * @property String\n         */\n        id: String,\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: [Array, Number, String]\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group-append\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'input-group-append',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group-prepend\">\n        <input-group-text v-if=\"text\">\n            <slot/>\n        </input-group-text>\n        <slot v-else/>\n    </div>\n\n</template>\n\n<script>\nexport default {\n\n    name: 'input-group-prepend',\n\n    props: {\n\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        text: Boolean\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"input-group\" :class=\"mergeClasses(colorableClasses, sizeableClass)\">\n\n        <slot name=\"prepend\">\n            <template v-if=\"prepend instanceof Array\">\n                <input-group-prepend>\n                    <input-group-text v-for=\"value in prepend\" :key=\"value\" :text=\"value\"/>\n                </input-group-prepend>\n            </template>\n            <template v-else-if=\"prepend\">\n                <input-group-prepend text>{{prepend}}</input-group-prepend>\n            </template>\n        </slot>\n\n        <slot/>\n\n        <slot name=\"append\">\n            <template v-if=\"append instanceof Array\">\n                <input-group-append>\n                    <input-group-text v-for=\"value in append\" :key=\"value\" :text=\"value\"/>\n                </input-group-append>\n            </template>\n            <template v-else-if=\"append\">\n                <input-group-append text>{{append}}</input-group-append>\n            </template>\n        </slot>\n    </div>\n\n</template>\n\n<script>\nimport HasSlots from '../../Mixins/HasSlots';\nimport Sizeable from '../../Mixins/Sizeable';\nimport InputGroupText from './InputGroupText';\nimport Colorable from '../../Mixins/Colorable';\nimport InputGroupAppend from './InputGroupAppend';\nimport InputGroupPrepend from './InputGroupPrepend';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'input-group',\n\n    components: {\n        InputGroupText,\n        InputGroupAppend,\n        InputGroupPrepend\n    },\n\n    mixins: [\n        HasSlots,\n        Sizeable,\n        Colorable,\n        MergeClasses\n    ],\n\n    props: {\n\n        append: [Array, Number, String],\n\n        prepend: [Array, Number, String]\n\n    }\n\n};\n</script>\n","<template>\n\n    <div class=\"form-group\">\n\n        <fieldset>\n\n            <legend>Select an amount</legend>\n\n            <div v-for=\"chunk in amounts\" class=\"row\">\n                <div v-for=\"amount in chunk\" class=\"col-sm-6\">\n                    <radio-field v-model=\"form.donation\" name=\"donation\" :label=\"amount\" :value=\"amount\"/>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <label :for=\"question.id\" v-html=\"question.question\"/>\n                    <input-group prepend=\"$\">\n                        <input\n                            type=\"text\"\n                            class=\"form-control\"\n                            :name=\"name\"\n                            :value=\"value\"\n                            :class=\"{'is-invalid': !!invalidFeedback}\"\n                            :required=\"question.required\"/>\n                    </input-group>\n                </div>\n            </div>\n\n        </fieldset>\n\n    </div>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport InputGroup from 'vue-interface/src/Components/InputGroup';\nimport RadioField from 'vue-interface/src/Components/RadioField';\nimport { chunk } from 'vue-interface/src/Helpers/Functions';\n\nexport default {\n\n    name: 'dollar-amount-field',\n\n    extends: SurveyField,\n\n    components: {\n        InputGroup,\n        RadioField\n    },\n\n    computed: {\n\n        amounts() {\n            const values = this.question.answers\n                ? this.question.answers.split('|')\n                : this.page.site.config.giveworks.ask_amounts;\n\n            return chunk(values.filter(value => {\n                return value >= (parseFloat(this.page.options.min_amount) || 0);\n            }), 2);\n        }\n\n    }\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form.first\"\n        id=\"first\"\n        name=\"first\"\n        placeholder=\"First Name\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"/>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'first-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","<script>\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'input-field',\n\n    extends: InputField\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form.last\"\n        id=\"last\"\n        name=\"last\"\n        placeholder=\"Last Name\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'last-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form.email\"\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Email Address\"\n        id=\"email\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'primary-email-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form.phone\"\n        type=\"phone\"\n        name=\"phone\"\n        id=\"phone\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'primary-phone-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","<template>\n\n    <form-group :class=\"{'is-invalid': !!invalidFeedback}\">\n\n        <label>\n            {{question.question}} <sup v-if=\"question.required\">*</sup>\n        </label>\n\n        <radio-field\n            v-model=\"form[name]\"\n            v-for=\"(answer, key) in question.answers\"\n            :key=\"key\"\n            :label=\"answer\"\n            :value=\"answer\"\n            :checkedValue=\"value\"\n            :name=\"name\"\n            :id=\"`${name}_${key}`\"\n            @change=\"updated\"/>\n\n        <template v-if=\"question.accept_other\">\n            <radio-field v-model=\"form[name]\" v-changed value=\"other\" label=\"Other:\" :name=\"name\" :id=\"`${name}_50`\" :checkedValue=\"value\" @change=\"updated\"/>\n            <input v-model=\"form[`${name}_other`]\" type=\"text\" class=\"form-control\" :class=\"{'is-invalid': errors[name]}\" :name=\"`${name}_other`\" :id=\"`${name}_other`\" @input=\"updated($event.target.value);\"/>\n        </template>\n\n        <slot name=\"feedback\">\n            <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n            <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport RadioField from 'vue-interface/src/Components/RadioField';\nimport FormFeedback from 'vue-interface/src/Components/FormFeedback';\n\nexport default {\n\n    name: 'radio-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        RadioField,\n        FormFeedback\n    }\n\n};\n</script>\n","<template>\n\n    <form-group :class=\"{'has-activity': activity}\">\n\n        <slot name=\"label\">\n            <form-label v-if=\"label\" :for=\"id\" v-html=\"label\"/>\n        </slot>\n\n        <div class=\"form-group-inner\">\n            <slot name=\"control\">\n                <select\n                    v-bind-events\n                    v-bind=\"controlAttributes\"\n                    :value=\"value\"\n                    @input=\"$emit('input', $event.target.value)\">\n                    <slot/>\n                </select>\n            </slot>\n\n            <slot name=\"activity\">\n                <transition name=\"slide-fade\">\n                    <activity-indicator key=\"test\" v-if=\"activity\" ref=\"activity\" type=\"dots\" :size=\"size\"/>\n                </transition>\n            </slot>\n\n            <slot name=\"feedback\">\n                <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n            </slot>\n        </div>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormControl from '../FormControl';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport ActivityIndicator from '../ActivityIndicator';\nimport MergeClasses from '../../Mixins/MergeClasses';\nimport FormControlMixin from '../../Mixins/FormControl';\n\nconst CUSTOM_SELECT_PREFIX = 'custom-select-';\n\nexport default {\n\n    name: 'select-field',\n\n    components: {\n        ActivityIndicator,\n        HelpText,\n        FormControl,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        MergeClasses,\n        FormControlMixin\n    ],\n\n    props: {\n\n        /**\n         * Show type activity indicator.\n         *\n         * @property Boolean\n         */\n        activity: {\n            type: Boolean,\n            default: false\n        },\n\n        /**\n         * Add `custom-select` to the form control if true.\n         *\n         * @property String\n         */\n        custom: Boolean\n\n    },\n\n    computed: {\n\n        controlClass() {\n            const controlClass = this.custom ? 'custom-select' : this.defaultControlClass;\n            return this.plaintext ? `${controlClass}-plaintext` : controlClass;\n        },\n\n        customSelectClasses() {\n            return [\n                CUSTOM_SELECT_PREFIX.replace(/-$/, '') + (this.plaintext ? '-plaintext' : ''),\n                this.customSelectSizeClass,\n                (this.spacing || '')\n            ].join(' ');\n        }\n    }\n\n};\n</script>\n\n<style lang=\"scss\">\n.has-activity {\n    select {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n    }\n\n    /* For IE10 */\n    select::-ms-expand {\n        display: none;\n    }\n}\n</style>\n","<template>\n\n    <select-field\n        v-model=\"form[name]\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :name=\"name\"\n        :id=\"question.id\"\n        :errors=\"errors\"\n        :required=\"question.required\"\n        @input=\"updated\">\n        <option v-for=\"(value, key) in question.answers\" :value=\"value\" v-html=\"value\"/>\n    </select-field>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport SelectField from 'vue-interface/src/Components/SelectField';\n\nexport default {\n\n    name: 'select-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        SelectField\n    }\n\n};\n</script>\n","<template>\n\n    <select-field\n        v-model=\"form.state\"\n        name=\"state\"\n        :id=\"question.id\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        @input=\"updated\">\n        <option v-for=\"(label, value) in page.site.config.states\" :value=\"value\" v-html=\"label\"/>\n    </select-field>\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport SelectField from 'vue-interface/src/Components/SelectField';\n\nexport default {\n\n    name: 'state-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        SelectField\n    }\n\n};\n</script>\n","<template>\n\n    <place-autocomplete-field\n        v-model=\"form.street\"\n        id=\"street\"\n        name=\"street\"\n        placeholder=\"Street Address\"\n        api-key=\"AIzaSyAhSv9zWvisiTXRPRw6K8AE0DCmrRMpQcU\"\n        :errors=\"errors\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        v-place-autofill:street=\"form.street\"\n        v-place-autofill:city=\"form.city\"\n        v-place-autofill:state=\"form.state\"\n        v-place-autofill:zip=\"form.zip\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport { PlaceAutofill, PlaceAutocompleteField } from 'vue-place-autocomplete';\n\nexport default {\n\n    name: 'street-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        PlaceAutocompleteField\n    },\n\n    directives: {\n        PlaceAutofill\n    }\n\n};\n</script>\n","<template>\n\n    <form-group>\n\n        <slot name=\"label\">\n            <form-label v-if=\"label || hasDefaultSlot\" :for=\"id\">\n                <slot>{{label}}</slot>\n            </form-label>\n        </slot>\n\n        <slot name=\"control\">\n            <div class=\"position-relative\">\n                <textarea\n                    :id=\"id\"\n                    :rows=\"rows\"\n                    :value=\"value\"\n                    :errors=\"errors\"\n                    :pattern=\"pattern\"\n                    :readonly=\"readonly\"\n                    :required=\"required\"\n                    :maxlength=\"maxlength\"\n                    :placeholder=\"placeholder\"\n                    :disabled=\"disabled || readonly\"\n                    :class=\"mergeClasses(controlClasses, colorableClasses)\"\n                    v-bind-events=\"bindEvents\"\n                    @input=\"$emit('input', $event.target.value)\">\n                </textarea>\n\n                <slot name=\"feedback\">\n                    <form-feedback v-if=\"validFeedback\" v-html=\"validFeedback\" valid />\n                    <form-feedback v-if=\"invalidFeedback\" v-html=\"invalidFeedback\" invalid />\n                </slot>\n            </div>\n        </slot>\n\n        <slot name=\"help\">\n            <help-text v-if=\"helpText\" v-html=\"helpText\" />\n        </slot>\n\n    </form-group>\n\n</template>\n\n<script>\nimport HelpText from '../HelpText';\nimport FormGroup from '../FormGroup';\nimport FormLabel from '../FormLabel';\nimport FormFeedback from '../FormFeedback';\nimport Colorable from '../../Mixins/Colorable';\nimport FormControl from '../../Mixins/FormControl';\nimport MergeClasses from '../../Mixins/MergeClasses';\n\nexport default {\n\n    name: 'textarea-field',\n\n    components: {\n        HelpText,\n        FormGroup,\n        FormLabel,\n        FormFeedback\n    },\n\n    mixins: [\n        Colorable,\n        FormControl,\n        MergeClasses\n    ],\n\n    props: {\n        /**\n         * The type attribute\n         *\n         * @property String\n         */\n        type: {\n            type: String,\n            default: 'text'\n        },\n\n        /**\n         * The rows attribute\n         *\n         * @property String\n         */\n        rows: [Number, String]\n    }\n\n};\n</script>\n","<template>\n\n    <textarea-field\n        v-autogrow\n        v-model=\"form[name]\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :name=\"name\"\n        :required=\"question.required\"\n        :id=\"question.id\"\n        :errors=\"errors\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport Autogrow from 'vue-interface/src/Directives/Autogrow';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport TextareaField from 'vue-interface/src/Components/TextareaField';\n\nexport default {\n\n    name: 'textarea-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        TextareaField\n    },\n\n    directives: {\n        Autogrow\n    }\n\n};\n</script>\n","<template>\n\n    <input-field\n        v-model=\"form.zip\"\n        id=\"zip\"\n        name=\"zip\"\n        :label=\"`${question.question}${question.required ? '*' : ''}`\"\n        :required=\"question.required\"\n        :errors=\"errors\"\n        maxlength=\"9\"\n        placeholder=\"Zip Code (5 digits)\"\n        x_autocompletetype=\"postal-code\"\n        @input=\"updated\"\n    />\n\n</template>\n\n<script>\nimport SurveyField from './SurveyField';\nimport FormControl from 'vue-interface/src/Mixins/FormControl';\nimport InputField from 'vue-interface/src/Components/InputField';\n\nexport default {\n\n    name: 'zip-field',\n\n    extends: SurveyField,\n\n    mixins: [\n        FormControl\n    ],\n\n    components: {\n        InputField\n    }\n\n};\n</script>\n","import './scss/main.scss';\nimport * as Fields from './Components/Fields';\n\n// import 'es6-object-assign';\n// import 'promise-polyfill/src/polyfill';\n// import GiveworksForm from '@/Plugins/GiveworksForm';\n\n/*\nimport {\n    InputField,\n    SelectField\n} from './Components/Fields';\n\nexport {\n    InputField,\n    SelectField\n};\n*/\n\nif(window && window.Vue) {\n    for(let i in Fields) {\n        if(Fields[i].name) {\n            window.Vue.component(Fields[i].name, Fields[i]);\n        }\n    }\n}\n\n// export default GiveworksForm;\n"],"names":["chunk","arr","chunkSize","cache","tmp","length","push","splice","extend","args","Object","assign","isNull","value","isArray","Array","isObject","isNumber","toString","isNumeric","match","key","parseFloat","each","subject","fn","i","isFunction","Function","isBoolean","kebabCase","str","replace","toLowerCase","mapKeys","object","mapped","prefix","delimeter","prefixer","string","RegExp","filter","join","normalizeComponent","compiledTemplate","injectStyle","defaultExport","scopeId","isFunctionalTemplate","moduleIdentifier","isShadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","render","staticRenderFns","_compiled","functional","_scopeId","hook","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","height","isFinite","camelCase","charAt","toUpperCase","substring","matches","properties","isString","get","path","split","reduce","a","b","property","matchesProperty","predicate","isUndefined","negate","pickBy","omitBy","intersection","indexOf","e","c","extract","type","modifiers","geocoder","geometry","location","lat","lng","aliases","ALIASES","values","address_components","map","component","types","short","update","binding","vnode","props","expression","prop","pop","model","carry","query","componentInstance","geocode","window","google","maps","Geocoder","Promise","resolve","reject","results","status","GeocoderStatus","OK","element","url","script","document","createElement","setAttribute","append","querySelector","appendChild","LOADED_SCRIPTS","addEventListener","event","key$$1","use","plugin","Vue","name","def","VueInstaller","$plugins","plugins","$filters","filters","$components","components","directive","$directives","directives","classes","instance","namespace","COLORS","color","unit","install","PlaceAutofill","PlaceAutocompleteField","PlaceAutocompleteList","PlaceAutocompleteListItem","int","parseInt","input","div","el","innerHTML","getBoundingClientRect","style","attr","getComputedStyle","resize","target","minHeight","maxHeight","dynamicHeight","Math","max","mimic","styles","STYLE_ATTRIBUTES","position","bottom","zIndex","visibility","init","body","computed","[object Object]","$attrs","methods","slice","arguments","arg","inheritAttrs","mixins","Colorable","MergeClasses","label","Number","String","default","group","Boolean","error","errors","feedback","bindEvents","defaultControlClass","hideLabel","spacing","size","validate","inline","helpText","maxlength","classList","remove","$emit","getInputField","blur","focus","$el","id","mergeClasses","controlClasses","colorableClasses","keys","plaintext","controlClass","controlSizeClass","invalidFeedback","$slots","getFieldErrors","srOnly","srOnlyFocusable","sr-only","sr-only-focusable","slot","slots","hasSlot","sizeableClassPrefix","street","city","state","zip","zipcode","county","bind","$on","place","$nextTick","_vm","_h","$createElement","_c","_self","staticClass","on","onFocus","onBlur","attrs","href","click","$event","preventDefault","onClick","_v","_t","item","_l","_s","display","items","FormControl","autocomplete","placeholder","required","pattern","readonly","disabled","callback","FormGroup","textColor","trim","borderColor","bgColor","bgGradientColor","textColorClasses","borderColorClasses","bgColorClasses","bgGradientColorClasses","Screenreaders","HelpText","class","screenreaderClasses","FormLabel","FormFeedback","invalid-feedback","invalid","valid-feedback","valid","BaseType","nodes","ActivityIndicatorDots","extends","ActivityIndicatorSpinner","ActivityIndicator","position-relative","relative","position-fixed","fixed","tag","domProps","_e","center","width","maxWidth","minWidth","InputField","has-activity","activity","hasDefaultSlot","ref","for","rawName","aria-label","aria-describedby","validFeedback","KEYCODE","ESC","LEFT","UP","RIGHT","DOWN","ENTER","SPACE","TAB","API_REQUEST_OPTIONS","keydown","onKeydown","keyup","onKeyup","$$v","predictions","showPredictions","item:click","onItemClick","item:blur","onItemBlur","api-key","base-uri","libraries","bounds","component-restrictions","offset","radius","getInputElement","undefined","placeId","place_id","then","response","hide","formatted_address","$service","getPlacePredictions","getRequestOptions","places","PlacesServiceStatus","Error","focused","parentElement","previousElementSibling","links","querySelectorAll","nextElementSibling","keyCode","dispatchEvent","Event","up","down","search","show","contains","relatedTarget","child","select","baseUri","apiKey","$geocoder","AutocompleteService","loaded","tagName","Fields"],"mappings":"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"}