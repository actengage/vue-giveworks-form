{"version":3,"sources":["webpack:///./node_modules/@bugsnag/plugin-vue/dist/bugsnag-vue.js"],"names":["f","module","exports","_$src_1","_this","this","name","init","client","Vue","window","Error","prev","config","errorHandler","handler","err","vm","info","handledState","severity","unhandled","severityReason","type","report","BugsnagReport","message","getStacktrace","updateMetaData","errorInfo","component","formatComponentName","undefined","props","$options","propsData","notify","console","error","call","includeFile","$root","options","cid","_isVue","constructor","_componentTag","file","__file","match","classify","str","replace","c","toUpperCase"],"mappings":"oGAAA,SAAAA,GAAwEC,EAAAC,QAAAF,KAAxE,CAAsU,WAAa,IACnVG,EAAA,GACAC,EAAAC,KAEAF,EAAA,CACAG,KAAA,MACAC,KAAA,SAAAC,EAAAC,GAKA,QAJA,IAAAA,IACAA,EAAAC,OAAAD,MAGAA,EAAA,UAAAE,MAAA,mBACA,IAAAC,EAAAH,EAAAI,OAAAC,aAEAC,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,CACAC,SAAA,QACAC,WAAA,EACAC,eAAA,CACAC,KAAA,uBAGAC,EAAA,IAAAhB,EAAAiB,cAAAT,EAAAV,KAAAU,EAAAU,QAAAlB,EAAAiB,cAAAE,cAAAX,GAAAG,EAAAH,GACAQ,EAAAI,eAAA,OACAC,UAAAX,EACAY,UAAAb,EAAAc,EAAAd,GAAA,QAAAe,EACAC,MAAAhB,IAAAiB,SAAAC,eAAAH,IAEAxB,EAAA4B,OAAAZ,GACA,qBAAAa,SAAA,oBAAAA,QAAAC,OAAAD,QAAAC,MAAAtB,GACA,oBAAAJ,KAAA2B,KAAAnC,EAAAY,EAAAC,EAAAC,IAIA,OADAT,EAAAI,OAAAC,aAAAC,EACA,OAKA,IAAAgB,EAAA,SAAAd,EAAAuB,GACA,GAAAvB,EAAAwB,QAAAxB,EAAA,eACA,IAAAyB,EAAA,oBAAAzB,GAAA,MAAAA,EAAA0B,IAAA1B,EAAAyB,QAAAzB,EAAA2B,OAAA3B,EAAAiB,UAAAjB,EAAA4B,YAAAH,QAAAzB,GAAA,GACAX,EAAAoC,EAAApC,MAAAoC,EAAAI,cACAC,EAAAL,EAAAM,OAEA,IAAA1C,GAAAyC,EAAA,CACA,IAAAE,EAAAF,EAAAE,MAAA,oBACA3C,EAAA2C,KAAA,GAGA,OAAA3C,EAAA,IAAA4C,EAAA5C,GAAA,oBAAAyC,IAAA,IAAAP,EAAA,OAAAO,EAAA,KAIAG,EAAA/C,EAAA+C,SAAA,SAAAC,GACA,OAAAA,EAAAC,QAAA,2BAAAC,GACA,OAAAA,EAAAC,gBACGF,QAAA,aAGH,OAAAjD","file":"js/chunk-2d0b8ecd.0b28541e.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag__vue = f()}})(function(){var define,module,exports;\nvar _$src_1 = {};\nvar _this = this;\n\n_$src_1 = {\n  name: 'vue',\n  init: function (client, Vue) {\n    if (Vue === void 0) {\n      Vue = window.Vue;\n    }\n\n    if (!Vue) throw new Error('cannot find Vue');\n    var prev = Vue.config.errorHandler;\n\n    var handler = function (err, vm, info) {\n      var handledState = {\n        severity: 'error',\n        unhandled: true,\n        severityReason: {\n          type: 'unhandledException'\n        }\n      };\n      var report = new client.BugsnagReport(err.name, err.message, client.BugsnagReport.getStacktrace(err), handledState, err);\n      report.updateMetaData('vue', {\n        errorInfo: info,\n        component: vm ? formatComponentName(vm, true) : undefined,\n        props: vm ? vm.$options.propsData : undefined\n      });\n      client.notify(report);\n      if (typeof console !== 'undefined' && typeof console.error === 'function') console.error(err);\n      if (typeof prev === 'function') prev.call(_this, err, vm, info);\n    };\n\n    Vue.config.errorHandler = handler;\n    return null;\n  } // taken and reworked from Vue.js source\n\n};\n\nvar formatComponentName = function (vm, includeFile) {\n  if (vm.$root === vm) return '<Root>';\n  var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm || {};\n  var name = options.name || options._componentTag;\n  var file = options.__file;\n\n  if (!name && file) {\n    var match = file.match(/([^/\\\\]+)\\.vue$/);\n    name = match && match[1];\n  }\n\n  return (name ? '<' + classify(name) + '>' : '<Anonymous>') + (file && includeFile !== false ? ' at ' + file : '');\n}; // taken and reworked from Vue.js source\n\n\nvar classify = _$src_1.classify = function (str) {\n  return str.replace(/(?:^|[-_])(\\w)/g, function (c) {\n    return c.toUpperCase();\n  }).replace(/[-_]/g, '');\n};\n\nreturn _$src_1;\n\n});\n//# sourceMappingURL=bugsnag-vue.js.map\n"],"sourceRoot":""}