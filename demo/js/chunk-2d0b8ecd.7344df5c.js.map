{"version":3,"sources":["webpack:///./node_modules/@bugsnag/plugin-vue/dist/bugsnag-vue.js"],"names":["f","module","exports","_$src_1","_this","this","name","init","client","Vue","window","Error","prev","config","errorHandler","handler","err","vm","info","handledState","severity","unhandled","severityReason","type","report","BugsnagReport","message","getStacktrace","updateMetaData","errorInfo","component","formatComponentName","undefined","props","$options","propsData","notify","console","error","call","includeFile","$root","options","cid","_isVue","constructor","_componentTag","file","__file","match","classify","str","replace","c","toUpperCase"],"mappings":"oGAAA,SAAUA,GAA8DC,EAAOC,QAAQF,KAAvF,EAAwU,WAAW,IAC/UG,EAAU,GACVC,EAAQC,KAEZF,EAAU,CACRG,KAAM,MACNC,KAAM,SAAUC,EAAQC,GAKtB,QAJY,IAARA,IACFA,EAAMC,OAAOD,MAGVA,EAAK,MAAM,IAAIE,MAAM,mBAC1B,IAAIC,EAAOH,EAAII,OAAOC,aAElBC,EAAU,SAAUC,EAAKC,EAAIC,GAC/B,IAAIC,EAAe,CACjBC,SAAU,QACVC,WAAW,EACXC,eAAgB,CACdC,KAAM,uBAGNC,EAAS,IAAIhB,EAAOiB,cAAcT,EAAIV,KAAMU,EAAIU,QAASlB,EAAOiB,cAAcE,cAAcX,GAAMG,EAAcH,GACpHQ,EAAOI,eAAe,MAAO,CAC3BC,UAAWX,EACXY,UAAWb,EAAKc,EAAoBd,GAAI,QAAQe,EAChDC,MAAOhB,EAAKA,EAAGiB,SAASC,eAAYH,IAEtCxB,EAAO4B,OAAOZ,GACS,qBAAZa,SAAoD,oBAAlBA,QAAQC,OAAsBD,QAAQC,MAAMtB,GACrE,oBAATJ,GAAqBA,EAAK2B,KAAKnC,EAAOY,EAAKC,EAAIC,IAI5D,OADAT,EAAII,OAAOC,aAAeC,EACnB,OAKX,IAAIgB,EAAsB,SAAUd,EAAIuB,GACtC,GAAIvB,EAAGwB,QAAUxB,EAAI,MAAO,SAC5B,IAAIyB,EAAwB,oBAAPzB,GAA+B,MAAVA,EAAG0B,IAAc1B,EAAGyB,QAAUzB,EAAG2B,OAAS3B,EAAGiB,UAAYjB,EAAG4B,YAAYH,QAAUzB,GAAM,GAC9HX,EAAOoC,EAAQpC,MAAQoC,EAAQI,cAC/BC,EAAOL,EAAQM,OAEnB,IAAK1C,GAAQyC,EAAM,CACjB,IAAIE,EAAQF,EAAKE,MAAM,mBACvB3C,EAAO2C,GAASA,EAAM,GAGxB,OAAQ3C,EAAO,IAAM4C,EAAS5C,GAAQ,IAAM,gBAAkByC,IAAwB,IAAhBP,EAAwB,OAASO,EAAO,KAI5GG,EAAW/C,EAAQ+C,SAAW,SAAUC,GAC1C,OAAOA,EAAIC,QAAQ,mBAAmB,SAAUC,GAC9C,OAAOA,EAAEC,iBACRF,QAAQ,QAAS,KAGtB,OAAOjD","file":"js/chunk-2d0b8ecd.7344df5c.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.bugsnag__vue = f()}})(function(){var define,module,exports;\nvar _$src_1 = {};\nvar _this = this;\n\n_$src_1 = {\n  name: 'vue',\n  init: function (client, Vue) {\n    if (Vue === void 0) {\n      Vue = window.Vue;\n    }\n\n    if (!Vue) throw new Error('cannot find Vue');\n    var prev = Vue.config.errorHandler;\n\n    var handler = function (err, vm, info) {\n      var handledState = {\n        severity: 'error',\n        unhandled: true,\n        severityReason: {\n          type: 'unhandledException'\n        }\n      };\n      var report = new client.BugsnagReport(err.name, err.message, client.BugsnagReport.getStacktrace(err), handledState, err);\n      report.updateMetaData('vue', {\n        errorInfo: info,\n        component: vm ? formatComponentName(vm, true) : undefined,\n        props: vm ? vm.$options.propsData : undefined\n      });\n      client.notify(report);\n      if (typeof console !== 'undefined' && typeof console.error === 'function') console.error(err);\n      if (typeof prev === 'function') prev.call(_this, err, vm, info);\n    };\n\n    Vue.config.errorHandler = handler;\n    return null;\n  } // taken and reworked from Vue.js source\n\n};\n\nvar formatComponentName = function (vm, includeFile) {\n  if (vm.$root === vm) return '<Root>';\n  var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm || {};\n  var name = options.name || options._componentTag;\n  var file = options.__file;\n\n  if (!name && file) {\n    var match = file.match(/([^/\\\\]+)\\.vue$/);\n    name = match && match[1];\n  }\n\n  return (name ? '<' + classify(name) + '>' : '<Anonymous>') + (file && includeFile !== false ? ' at ' + file : '');\n}; // taken and reworked from Vue.js source\n\n\nvar classify = _$src_1.classify = function (str) {\n  return str.replace(/(?:^|[-_])(\\w)/g, function (c) {\n    return c.toUpperCase();\n  }).replace(/[-_]/g, '');\n};\n\nreturn _$src_1;\n\n});\n//# sourceMappingURL=bugsnag-vue.js.map\n"],"sourceRoot":""}