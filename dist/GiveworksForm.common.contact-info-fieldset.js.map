{"version":3,"sources":["webpack://GiveworksForm/./node_modules/vue-place-autocomplete/src/Directives/PlaceAutofill.js","webpack://GiveworksForm/./src/Mixins/GoogleMapsApiKey.js","webpack://GiveworksForm/./src/Directives/Query.js","webpack://GiveworksForm/./src/Mixins/FormComponent.js","webpack://GiveworksForm/./src/Components/Fieldsets/ContactInfoFieldset.vue?467a","webpack://GiveworksForm/src/Components/Fieldsets/ContactInfoFieldset.vue","webpack://GiveworksForm/./src/Components/Fieldsets/ContactInfoFieldset.vue?9d5d","webpack://GiveworksForm/./src/Components/Fieldsets/ContactInfoFieldset.vue"],"names":["computed","mapApiKey","process","input","el","indexOf","tagName","Array","from","querySelectorAll","reverse","pop","inserted","binding","vnode","field","params","URLSearchParams","location","search","key","value","getAttribute","get","componentInstance","$emit","elm","props","page","type","Object","required","form","errors","Boolean","mixins","FormEvents","commentMessage","options","comment_message","site","config","giveworks","comment_mess","optinMessage","optin_message","optin_mess","buttonLabel","button"],"mappings":"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","file":"GiveworksForm.common.contact-info-fieldset.js","sourcesContent":["import { isArray } from 'vue-interface/src/Helpers/Functions';\n\nconst ALIASES = {\n    'street': ['street_number', 'route', 'intersection'],\n    'city': ['locality'],\n    'state': ['administrative_area_level_1'],\n    'zip': ['postal_code'],\n    'zipcode': ['postal_code'],\n    'county': ['administrative_area_level_2']\n};\n\nfunction intersection(a, b) {\n    return a\n        .filter(value => b.indexOf(value) !== -1)\n        .filter((e, i, c) => {\n            return c.indexOf(e) === i;\n        });\n}\n\nfunction extract(type, modifiers, geocoder) {\n    if(geocoder[type]) {\n        return geocoder[type];\n    }\n    else if(type === 'latitude') {\n        return geocoder.geometry.location.lat();\n    }\n    else if(type === 'longitude') {\n        return geocoder.geometry.location.lng();\n    }\n\n    const aliases = ALIASES[type] || (isArray(type) ? type : [type]);\n\n    const values = geocoder.address_components\n        .map(component => {\n            if(intersection(component.types, aliases).length) {\n                return component[modifiers.short ? 'short_name' : 'long_name'];\n            }\n        })\n        .filter(value => !!value);\n\n    return values.length ? values.join(' ') : null;\n}\n\nfunction update(binding, vnode, value) {\n    const props = binding.expression.split('.');\n    const prop = props.pop();\n    const model = props.reduce((carry, i) => carry[i], vnode.context);\n\n    value = isArray(value) ? value.join(' ') : value;\n\n    if(binding.modifiers.query) {\n        vnode.componentInstance.query = value;\n    }\n\n    model[prop] = value;\n\n    return value;\n}\n\nexport default {\n\n    bind(el, binding, vnode) {\n        vnode.componentInstance.$on('autocomplete-select', (place, geocoder) => {\n            vnode.context.$nextTick(() => {\n                update(binding, vnode, extract(binding.arg, binding.modifiers, geocoder));\n            });\n        });\n    }\n\n};\n","export default {\n\n    computed: {\n\n        mapApiKey() {\n            return process.env.VUE_APP_GOOGLE_MAPS_KEY;\n        }\n\n    }\n\n};","function input(el) {\n    if(['input', 'textarea', 'select'].indexOf(el.tagName) !== -1) {\n        return el;\n    }\n\n    return Array.from(el.querySelectorAll('input, textarea, select')).reverse().pop();\n}\n\nexport default {\n\n    inserted(el, binding, vnode) {\n        const field = input(el);\n        const params = new URLSearchParams(location.search);\n        const key = binding.value || field && field.getAttribute('name');\n        const value = params.get(key);\n\n        if(field && !field.value && !!value) {\n            if(vnode.componentInstance) {\n                vnode.componentInstance.$emit('input', value);\n            }\n            else {\n                vnode.elm.value = value;\n            }\n        }\n    }\n\n};","import FormEvents from './FormEvents';\n\nexport default {\n\n    props: {\n        page: {\n            type: Object,\n            required: true\n        },\n        form: {\n            type: Object\n        },\n        errors: {\n            type: [Boolean, Object],\n            required: true\n        }\n    },\n\n    mixins: [\n        FormEvents\n    ],\n\n    computed: {\n\n        commentMessage() {\n            return this.page.options.comment_message || this.page.site.config.giveworks.comment_mess;\n        },\n\n        optinMessage() {\n            return this.page.options.optin_message || this.page.site.config.giveworks.optin_mess;\n        },\n\n        buttonLabel() {\n            return this.page.options.button;\n        }\n\n    }\n\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('fieldset',[(_vm.page.options.add_title)?_c('select-field',{attrs:{\"name\":\"title\",\"label\":\"Title\",\"placeholder\":\"Title\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.title),callback:function ($$v) {_vm.$set(_vm.form, \"title\", $$v)},expression:\"form.title\"}},_vm._l((_vm.titles),function(value){return _c('option',{key:value,domProps:{\"value\":value,\"innerHTML\":_vm._s(value)}})}),0):_vm._e(),_c('input-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"name\":\"first\",\"label\":\"First Name\",\"placeholder\":\"First Name\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.first),callback:function ($$v) {_vm.$set(_vm.form, \"first\", $$v)},expression:\"form.first\"}}),_c('input-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"name\":\"last\",\"label\":\"Last Name\",\"placeholder\":\"Last Name\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.last),callback:function ($$v) {_vm.$set(_vm.form, \"last\", $$v)},expression:\"form.last\"}}),_c('input-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"type\":\"email\",\"name\":\"email\",\"label\":\"Email\",\"placeholder\":\"you@example.com\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.email),callback:function ($$v) {_vm.$set(_vm.form, \"email\", $$v)},expression:\"form.email\"}}),(_vm.page.options.add_phone)?_c('input-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"name\":\"phone\",\"label\":\"Phone Number\",\"placeholder\":\"Phone Number\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.phone),callback:function ($$v) {_vm.$set(_vm.form, \"phone\", $$v)},expression:\"form.phone\"}}):_vm._e(),(_vm.address || _vm.page.options.add_street)?_c('place-autocomplete-field',{directives:[{name:\"query\",rawName:\"v-query\"},{name:\"place-autofill\",rawName:\"v-place-autofill:street.query\",value:(_vm.form.street),expression:\"form.street\",arg:\"street\",modifiers:{\"query\":true}},{name:\"place-autofill\",rawName:\"v-place-autofill:city\",value:(_vm.form.city),expression:\"form.city\",arg:\"city\"},{name:\"place-autofill\",rawName:\"v-place-autofill:state.short\",value:(_vm.form.state),expression:\"form.state\",arg:\"state\",modifiers:{\"short\":true}},{name:\"place-autofill\",rawName:\"v-place-autofill:zip\",value:(_vm.form.zip),expression:\"form.zip\",arg:\"zip\"}],attrs:{\"name\":\"street\",\"label\":\"Address\",\"placeholder\":\"Address\",\"errors\":_vm.errors,\"api-key\":_vm.mapApiKey,\"custom\":\"\"},model:{value:(_vm.form.street),callback:function ($$v) {_vm.$set(_vm.form, \"street\", $$v)},expression:\"form.street\"}}):_vm._e(),(_vm.address || _vm.page.options.add_city || _vm.page.options.add_zip)?_c('div',{staticClass:\"row\"},[(_vm.address || _vm.page.options.add_city)?_c('div',{staticClass:\"col-sm-8\"},[_c('input-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"name\":\"city\",\"label\":\"City\",\"placeholder\":\"City\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.city),callback:function ($$v) {_vm.$set(_vm.form, \"city\", $$v)},expression:\"form.city\"}})],1):_vm._e(),(_vm.address || _vm.page.options.add_zip)?_c('div',{class:{'col-sm-4': _vm.address || _vm.page.options.add_city, 'col-sm-12': !_vm.address && !_vm.page.options.add_city}},[_c('input-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"name\":\"zip\",\"label\":\"Zip\",\"placeholder\":\"Zip\",\"errors\":_vm.errors,\"max-length\":\"5\",\"custom\":\"\"},model:{value:(_vm.form.zip),callback:function ($$v) {_vm.$set(_vm.form, \"zip\", $$v)},expression:\"form.zip\"}})],1):_vm._e()]):_vm._e(),(_vm.address || _vm.page.options.add_state)?_c('select-field',{directives:[{name:\"query\",rawName:\"v-query\"}],attrs:{\"name\":\"state\",\"label\":\"State\",\"errors\":_vm.errors,\"custom\":\"\"},model:{value:(_vm.form.state),callback:function ($$v) {_vm.$set(_vm.form, \"state\", $$v)},expression:\"form.state\"}},_vm._l((_vm.states),function(label,value){return _c('option',{key:value,domProps:{\"value\":value,\"innerHTML\":_vm._s(label)}})}),0):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <fieldset>\n        <select-field v-if=\"page.options.add_title\"\n            v-model=\"form.title\"\n            name=\"title\"\n            label=\"Title\"\n            placeholder=\"Title\"\n            :errors=\"errors\"\n            custom>\n            <option v-for=\"value in titles\" :key=\"value\" :value=\"value\" v-html=\"value\" />\n        </select-field>\n\n        <input-field v-model=\"form.first\"\n            v-query\n            name=\"first\"\n            label=\"First Name\"\n            placeholder=\"First Name\"\n            :errors=\"errors\"\n            custom />\n\n        <input-field v-model=\"form.last\"\n            v-query\n            name=\"last\"\n            label=\"Last Name\"\n            placeholder=\"Last Name\"\n            :errors=\"errors\"\n            custom />\n\n        <input-field v-model=\"form.email\"\n            v-query\n            type=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"you@example.com\"\n            :errors=\"errors\"\n            custom />\n\n        <input-field v-if=\"page.options.add_phone\"\n            v-model=\"form.phone\"\n            v-query\n            name=\"phone\"\n            label=\"Phone Number\"\n            placeholder=\"Phone Number\"\n            :errors=\"errors\"\n            custom />\n\n        <place-autocomplete-field\n            v-if=\"address || page.options.add_street\"\n            v-model=\"form.street\"\n            v-query\n            v-place-autofill:street.query=\"form.street\"\n            v-place-autofill:city=\"form.city\"\n            v-place-autofill:state.short=\"form.state\"\n            v-place-autofill:zip=\"form.zip\"\n            name=\"street\"\n            label=\"Address\"\n            placeholder=\"Address\"\n            :errors=\"errors\"\n            :api-key=\"mapApiKey\"\n            custom />\n\n        <div v-if=\"address || page.options.add_city || page.options.add_zip\" class=\"row\">\n            <div v-if=\"address || page.options.add_city\" class=\"col-sm-8\">\n                <input-field v-model=\"form.city\"\n                    v-query\n                    name=\"city\"\n                    label=\"City\"\n                    placeholder=\"City\"\n                    :errors=\"errors\"\n                    custom />\n            </div>\n            <div v-if=\"address || page.options.add_zip\" :class=\"{'col-sm-4': address || page.options.add_city, 'col-sm-12': !address && !page.options.add_city}\">\n                <input-field v-model=\"form.zip\"\n                    v-query\n                    name=\"zip\"\n                    label=\"Zip\"\n                    placeholder=\"Zip\"\n                    :errors=\"errors\"\n                    max-length=\"5\"\n                    custom />\n            </div>\n        </div>\n\n        <select-field v-if=\"address || page.options.add_state\"\n            v-model=\"form.state\"\n            v-query\n            name=\"state\"\n            label=\"State\"\n            :errors=\"errors\"\n            custom>\n            <option v-for=\"(label, value) in states\" :key=\"value\" :value=\"value\" v-html=\"label\" />\n        </select-field>\n    </fieldset>\n</template>\n\n<script>\nimport Query from '../../Directives/Query';\nimport FormComponent from '../../Mixins/FormComponent';\nimport GoogleMapsApiKey from '../../Mixins/GoogleMapsApiKey';\nimport PlaceAutofill from 'vue-place-autocomplete/src/Directives/PlaceAutofill';\n\nexport default {\n\n    name: 'ContactInfoFieldset',\n\n    components: {\n        InputField: () => import(/* webpackChunkName: \"vue-interface\" */'vue-interface/src/Components/InputField'),\n        SelectField: () => import(/* webpackChunkName: \"vue-interface\" */'vue-interface/src/Components/SelectField'),\n        PlaceAutocompleteField: () => import(/* webpackChunkName: \"place-autocomplete-field\" */'vue-place-autocomplete/src/PlaceAutocompleteField')\n    },\n\n    directives: {\n        Query,\n        PlaceAutofill\n    },\n\n    mixins: [\n        FormComponent,\n        GoogleMapsApiKey\n    ],\n\n    props: {\n        address: Boolean,\n        legends: {\n            type: Boolean,\n            default: true\n        }\n    },\n\n    computed: {\n\n        titles() {\n            return this.page.site.config.giveworks.titles;\n        },\n\n        states() {\n            const states = Object.assign({}, this.page.site.config.states);\n\n            delete states[''];\n            delete states[' '];\n\n            return states;\n        }\n    }\n\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactInfoFieldset.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ContactInfoFieldset.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ContactInfoFieldset.vue?vue&type=template&id=5ebaf178&\"\nimport script from \"./ContactInfoFieldset.vue?vue&type=script&lang=js&\"\nexport * from \"./ContactInfoFieldset.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}